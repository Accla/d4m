<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
	<property>
	  <name>cloudbase.zookeeper.host</name>
	  <value>localhost:2181</value>
	  <description>comma seperated list of zookeeper servers</description>
	</property>

	<property>
	  <name>cloudbase.zookeeper.sessionTimeout</name>
	  <value>30000</value>
	  <description>zookeeper session timeout</description>
	</property>

	<!-- BEGIN instance settings-->
	<!-- The following properties should be unique for each instance of cloudbase running on the same cluster
-->

	<property>
	  <name>cloudbase.directory</name>
	  <value>/cloudbase</value>
	  <description>HDFS directory in which cloudbase instance will run</description>
	</property>

	<property>
	<name>cloudbase.tabletserver.portSearch</name>
	<value>false</value>
	<description>if the ports above are in use, search higher ports until one is available</description>
	</property>
	
	<property>
	  <name>cloudbase.tabletserver.clientPort</name>
	  <value>9997</value>
	  <description></description>
	</property>
	
	<property>
	  <name>cloudbase.tabletserver.masterPort</name>
	  <value>9998</value>
	  <description></description>
	</property>
	
	<property>
	  <name>cloudbase.master.clientPort</name>
	  <value>9999</value>
	  <description></description>
	</property>

	<property>
	  <name>cloudbase.master.tabletPort</name>
	  <value>11223</value>
	  <description></description>
	</property>

	<property>
	  <name>cloudbase.tabletserver.monitor.port</name>
	  <value>50096</value>
	  <description></description>
	</property>
	
	<property>
	  <name>cloudbase.master.monitor.port</name>
	  <value>9996</value>
	  <description></description>
	</property>

	<property>
	  <name>cloudbase.monitor.port</name>
	  <value>50095</value>
	  <description></description>
	</property>

        <property>
	  <name>cloudbase.client.retries</name>
	  <value>5</value>
	  <description>The number of times to attempt to reconnect to a tablet server during a request</description>
        </property>
	
	<!-- END instance settings -->
	
	<property>
	  <name>cloudbase.master.balancer</name>
	  <value>cloudbase.core.master.balancer.SimpleLoadBalancer</value>
	  <description>The balancer class that cloudbase will use to make
	               tablet assignment and migration decisions.</description>
	</property>
	
	<property>
	  <name>cloudbase.master.tabletserver.maxPastDelta</name>
	  <value>30</value>
	  <description>The amount of time a tablet servers time can lag behind 
	               the masters time.  When a tablet servers time lags too much, 
	               the master will not assign tablets to it.
	  </description>
	</property>
	
	<property>
	  <name>cloudbase.master.tabletserver.maxFutureDelta</name>
	  <value>1</value>
	  <description>The amount of time a tablets servers time can be ahead 
	               of the masters time.  When a tablet server is too far ahead
	               of the master, the master will not assign tablets to it.
	  </description>
	</property>
	
	<!-- BEGIN per table settings-->
	<!-- The following properties can be overriden on a per table basis -->
	
	<property>
	  <name>cloudbase.tablet.majorCompaction.threshold</name>
	  <value>5</value>
	  <description>When more than specified map files are present
	               a major compaction will start.</description>
	</property>

	<property>
	  <name>cloudbase.tablet.majorCompaction.keep</name>
	  <value>2</value>
	  <description>Do not compact this number of largest map files 
	  			   during major compaction</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.majorCompaction.compactAllProbability</name>
	  <value>.05</value>
	  <description>Probability that all map files are compacted.  If this
	     is set to .1, then that means every major compaction has a 10% chance 
	     of compacting all map files.</description>
	</property>

	<property>
	  <name>cloudbase.tablet.split.threshold</name>
	  <value>268435456</value>
	  <description>When combined size of mapfiles exceeds this
	  			   amount a tablet is split.</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.split.findMidPoint.maxOpen</name>
	  <value>30</value>
	  <description>To find a tablets split points, all index files are opened.  
	               This setting determines how many index files can be opened 
	               at once.  When there are more index files than this settings
	               multiple passes must be made, which is slower. However opening
	               too many files are once can cause problems.</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.bulkImport.estimateEntries</name>
	  <value>false</value>
	  <description>Determines wether or not a tablet will inspect a bulk imported
	               map file to estimate the number of entries in the map file.
	               Disabling this feature may improve bulk import speeds.
	  </description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.cache.enable</name>
	  <value>false</value>
	  <description>Determines wether scan cache is enabled</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.cache.size</name>
	  <value>8388608</value>
	  <description>Scan cache size.</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.scan.max.time</name>
	  <value>100</value>
	  <description>The maximum amount of time, in milliseconds, one client can lock a tablet 
	               for scanning. However, even if the time limit is reached at least
	               cloudbase.tablet.scan.min.entries will always be scanned.
	                 
	               Lowering this setting will decrease the maximum possible time 
	               a tablet is locked to service one client query request.  This 
	               setting does not prevent clients from getting more than scan.max 
	               results, most client code will continue the scan after the last
	               entry it recieved.  Adjusting this setting is a trade off between 
	               query response time and the efficiency of a single request. 
	               Setting this value large could allow one client to monopolize a 
	               tablet and deny other client access to it.</description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.scan.min.entries</name>
	  <value>1000</value>
	  <description>The minimum number of entries that will be scanned
	               while a tablet is locked. After this entry limit is
	               reached scanning can continue until the time limit
	               specified in cloudbase.tablet.scan.max.time is 
	               reached.  </description>
	</property>
	
	<property>
	  <name>cloudbase.tablet.scan.max.memory</name>
	  <value>50000000</value>
	  <description>The maximum amount of memory that will be used to cache results
	               of a client query/scan.  Once this limit is reached, the
	               buffered data is sent to the client.</description>
	</property>

	<property>
      <name>cloudbase.tablet.io.seqfile.compress.blocksize</name>
      <value>100000</value>
	  <description>Overrides the hadoop io.seqfile.compress.blocksize setting
	               so that map files have better query performance.</description>
    </property>

	<property>
	  <name>cloudbase.tablet.dfs.replication</name>
	  <value>-1</value>
	  <description>Determines how many repilcas to keep of a tables map files in HDFS.
	               When this value is LTE 0, HDFS defaults are used.</description>
	</property>

	<!-- END per table settings -->
	
	<property>
	  <name>cloudbase.tablet.walog.directory</name>
	  <value></value>
	  <description>NFS directory for cloudbase METDATA write ahead log. 
	  			   When this values is not set, there is no logging.  
	  			   No write ahead is done for user tables.  
	  			   Therefore this setting only helps avoid data loss w/ 
	  			   cloudbase metadata and not user data.  NFS directory
	  			   should be accessible from all tablet servers.
	  			   
	  			   When enabling logging on an existing cloudbase instance, 
	  			   make sure /cloudbase/instance_id/something_unique exists.  
	  			   If not, create it w/ the command
	  			    
	  			     hadoop fs -touchz /cloudbase/instance_id/something_unique
	  </description>
	</property>	
	
	<property>
	  <name>cloudbase.tabletserver.compactionDelay</name>
	  <value>30</value>
	  <description>Seconds tablet server will sleep between checking which tablets need compaction.</description>
	</property>
	
	<property>
	  <name>cloudbase.tabletserver.maxOpen</name>
	  <value>90</value>
	  <description>Maximum total map files that all tablets
	               in a tablet server can open.  This includes
	               major compactions. So the number of map files
	               that can be opened for searches is :
	                
	                tabletserver.maxOpen - tabletserver.majorCompaction.maxOpen
	               </description>
	</property>
	
	<property>
	  <name>cloudbase.tabletserver.maxMapMemory</name>
	  <value>1073741824</value>
	  <description>Maximum amount of memory all tablets in memory
	               maps can use.</description>
	</property>
	
	<property>
		<name>cloudbase.tabletserver.memoryManager</name>
		<value>cloudbase.core.tabletserver.LargestFirstMemoryManager</value>
		<description>An implementation of MemoryManger that cloudbase will
		  use.</description>
	</property>
	
	<property>
	  <name>cloudbase.tabletserver.majorCompaction.maxConcurrent</name>
	  <value>1</value>
	  <description></description>
	</property>

	<property>
	  <name>cloudbase.tabletserver.majorCompaction.maxOpen</name>
	  <value>30</value>
	  <description>Max number of files a major compaction can open
	               at once.  At runtime this numnber is divided by 
	               the concurrent number of compactors.</description>
	</property>

	<property>
	  <name>cloudbase.tabletserver.minorCompaction.maxConcurrent</name>
	  <value>4</value>
	  <description></description>
	</property>

	<property>
	  <name>cloudbase.gc.mapfile.time.delay</name>
	  <value>600</value>
	  <description>Seconds between MapFile garbage collection.</description>
	</property>

	<property>
	  <name>cloudbase.gc.useSnapshots</name>
	  <value>true</value>
	  <description>Keep snapshots of files/references.</description>
	</property>

	<property>
	  <name>cloudbase.gc.mapfile.rounds.delay</name>
	  <value>6</value>
	  <description>Number of rounds to wait before actually deleting MapFiles during garbage collection.</description>
	</property>
		
	<property>
		<name>cloudbase.tabletserver.clientHandlers.maxConcurrent</name>
		<value>16</value>
		<description>Max number of clientHandlers per tablet server</description>
	</property>
	
	<property>
		<name>cloudbase.security.cellLevel.defaultLabelExpression</name>
		<value>CNF[]</value>
		<description>The system-wide cell-level security label to use when a particular key has an empty security label.
			Note: An empty security label is displayed as CNF[].
			CAUTION: If a particular key has an empty security label AND its table's defaultLabelExpression is also empty,
				access will ALWAYS be granted.
			This value applies to all tables but can be overwritten on a per-table basis via Zookeeper.</description>
	</property>
	
	<property>
		<name>cloudbase.classpaths</name>
		<value>
                    $CLOUDBASE_XTRAJARS,
                    $CLOUDBASE_HOME/cloudbase-server/target/classes/,
                    $CLOUDBASE_HOME/cloudbase-core/target/classes/,
                    $CLOUDBASE_HOME/cloudbase-start/target/classes/,
                    $CLOUDBASE_HOME/cloudbase-examples/target/classes/,
		    		$CLOUDBASE_HOME/conf,
			    	$CLOUDBASE_HOME/lib/[^.].$CLOUDBASE_VERSION.jar,
			    	$CLOUDBASE_HOME/lib/[^.].*.jar,
                    $CLOUDBASE_HOME/lib/ext/[^.].*.jar,
                    $CLOUDBASE_HOME/target/dependencies/[^.].*.jar,
                    $CLOUDBASE_HOME/cloudbase-server/target/[^.].*.jar,
                    $ZOOKEEPER_HOME/[^.].*.jar,
                    $HADOOP_HOME/[^.].*.jar,
                    $HADOOP_HOME/conf, 
                    $HADOOP_HOME/lib/[^.].*.jar
                </value>
		<description>A list of all of the places to look for a class.  Order does matter, as it will look for the jar 
		starting in the first location to the last.  Please note, hadoop conf and hadoop lib directories NEED to be here, 
		along with cloudbase lib and zookeeper directory.  Supports full regex on filename alone.</description>
	</property>
	
</configuration>
