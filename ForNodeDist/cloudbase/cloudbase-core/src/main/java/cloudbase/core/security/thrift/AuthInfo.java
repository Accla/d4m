/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.security.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class AuthInfo implements TBase, java.io.Serializable {
  public String user;
  public byte[] password;

  public final Isset __isset = new Isset();
  public static final class Isset implements java.io.Serializable {
    public boolean user = false;
    public boolean password = false;
  }

  public AuthInfo() {
  }

  public AuthInfo(
    String user,
    byte[] password)
  {
    this();
    this.user = user;
    this.__isset.user = true;
    this.password = password;
    this.__isset.password = true;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof AuthInfo)
      return this.equals((AuthInfo)that);
    return false;
  }

  public boolean equals(AuthInfo that) {
    if (that == null)
      return false;

    boolean this_present_user = true && (this.user != null);
    boolean that_present_user = true && (that.user != null);
    if (this_present_user || that_present_user) {
      if (!(this_present_user && that_present_user))
        return false;
      if (!this.user.equals(that.user))
        return false;
    }

    boolean this_present_password = true && (this.password != null);
    boolean that_present_password = true && (that.password != null);
    if (this_present_password || that_present_password) {
      if (!(this_present_password && that_present_password))
        return false;
      if (!java.util.Arrays.equals(this.password, that.password))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.STRING) {
            this.user = iprot.readString();
            this.__isset.user = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.STRING) {
            this.password = iprot.readBinary();
            this.__isset.password = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("AuthInfo");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    if (this.user != null) {
      field.name = "user";
      field.type = TType.STRING;
      field.id = 1;
      oprot.writeFieldBegin(field);
      oprot.writeString(this.user);
      oprot.writeFieldEnd();
    }
    if (this.password != null) {
      field.name = "password";
      field.type = TType.STRING;
      field.id = 2;
      oprot.writeFieldBegin(field);
      oprot.writeBinary(this.password);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("AuthInfo(");
    sb.append("user:");
    sb.append(this.user);
    sb.append(",password:");
    sb.append(this.password);
    sb.append(")");
    return sb.toString();
  }

}

