/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.master.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class TabletServerStatus implements TBase, java.io.Serializable {
  public double queryRate;
  public double ingestRate;
  public List<TabletRates> tabletRates;
  public long totalRecords;
  public long lastContact;
  public String URL;
  public String name;
  public double load;
  public double osLoad;
  public long tabletServerTime;

  public final Isset __isset = new Isset();
  public static final class Isset implements java.io.Serializable {
    public boolean queryRate = false;
    public boolean ingestRate = false;
    public boolean tabletRates = false;
    public boolean totalRecords = false;
    public boolean lastContact = false;
    public boolean URL = false;
    public boolean name = false;
    public boolean load = false;
    public boolean osLoad = false;
    public boolean tabletServerTime = false;
  }

  public TabletServerStatus() {
  }

  public TabletServerStatus(
    double queryRate,
    double ingestRate,
    List<TabletRates> tabletRates,
    long totalRecords,
    long lastContact,
    String URL,
    String name,
    double load,
    double osLoad,
    long tabletServerTime)
  {
    this();
    this.queryRate = queryRate;
    this.__isset.queryRate = true;
    this.ingestRate = ingestRate;
    this.__isset.ingestRate = true;
    this.tabletRates = tabletRates;
    this.__isset.tabletRates = true;
    this.totalRecords = totalRecords;
    this.__isset.totalRecords = true;
    this.lastContact = lastContact;
    this.__isset.lastContact = true;
    this.URL = URL;
    this.__isset.URL = true;
    this.name = name;
    this.__isset.name = true;
    this.load = load;
    this.__isset.load = true;
    this.osLoad = osLoad;
    this.__isset.osLoad = true;
    this.tabletServerTime = tabletServerTime;
    this.__isset.tabletServerTime = true;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TabletServerStatus)
      return this.equals((TabletServerStatus)that);
    return false;
  }

  public boolean equals(TabletServerStatus that) {
    if (that == null)
      return false;

    boolean this_present_queryRate = true;
    boolean that_present_queryRate = true;
    if (this_present_queryRate || that_present_queryRate) {
      if (!(this_present_queryRate && that_present_queryRate))
        return false;
      if (this.queryRate != that.queryRate)
        return false;
    }

    boolean this_present_ingestRate = true;
    boolean that_present_ingestRate = true;
    if (this_present_ingestRate || that_present_ingestRate) {
      if (!(this_present_ingestRate && that_present_ingestRate))
        return false;
      if (this.ingestRate != that.ingestRate)
        return false;
    }

    boolean this_present_tabletRates = true && (this.tabletRates != null);
    boolean that_present_tabletRates = true && (that.tabletRates != null);
    if (this_present_tabletRates || that_present_tabletRates) {
      if (!(this_present_tabletRates && that_present_tabletRates))
        return false;
      if (!this.tabletRates.equals(that.tabletRates))
        return false;
    }

    boolean this_present_totalRecords = true;
    boolean that_present_totalRecords = true;
    if (this_present_totalRecords || that_present_totalRecords) {
      if (!(this_present_totalRecords && that_present_totalRecords))
        return false;
      if (this.totalRecords != that.totalRecords)
        return false;
    }

    boolean this_present_lastContact = true;
    boolean that_present_lastContact = true;
    if (this_present_lastContact || that_present_lastContact) {
      if (!(this_present_lastContact && that_present_lastContact))
        return false;
      if (this.lastContact != that.lastContact)
        return false;
    }

    boolean this_present_URL = true && (this.URL != null);
    boolean that_present_URL = true && (that.URL != null);
    if (this_present_URL || that_present_URL) {
      if (!(this_present_URL && that_present_URL))
        return false;
      if (!this.URL.equals(that.URL))
        return false;
    }

    boolean this_present_name = true && (this.name != null);
    boolean that_present_name = true && (that.name != null);
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_load = true;
    boolean that_present_load = true;
    if (this_present_load || that_present_load) {
      if (!(this_present_load && that_present_load))
        return false;
      if (this.load != that.load)
        return false;
    }

    boolean this_present_osLoad = true;
    boolean that_present_osLoad = true;
    if (this_present_osLoad || that_present_osLoad) {
      if (!(this_present_osLoad && that_present_osLoad))
        return false;
      if (this.osLoad != that.osLoad)
        return false;
    }

    boolean this_present_tabletServerTime = true;
    boolean that_present_tabletServerTime = true;
    if (this_present_tabletServerTime || that_present_tabletServerTime) {
      if (!(this_present_tabletServerTime && that_present_tabletServerTime))
        return false;
      if (this.tabletServerTime != that.tabletServerTime)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.DOUBLE) {
            this.queryRate = iprot.readDouble();
            this.__isset.queryRate = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.DOUBLE) {
            this.ingestRate = iprot.readDouble();
            this.__isset.ingestRate = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3:
          if (field.type == TType.LIST) {
            {
              TList _list0 = iprot.readListBegin();
              this.tabletRates = new ArrayList<TabletRates>(_list0.size);
              for (int _i1 = 0; _i1 < _list0.size; ++_i1)
              {
                TabletRates _elem2 = new TabletRates();
                _elem2 = new TabletRates();
                _elem2.read(iprot);
                this.tabletRates.add(_elem2);
              }
              iprot.readListEnd();
            }
            this.__isset.tabletRates = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4:
          if (field.type == TType.I64) {
            this.totalRecords = iprot.readI64();
            this.__isset.totalRecords = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5:
          if (field.type == TType.I64) {
            this.lastContact = iprot.readI64();
            this.__isset.lastContact = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6:
          if (field.type == TType.STRING) {
            this.URL = iprot.readString();
            this.__isset.URL = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 7:
          if (field.type == TType.STRING) {
            this.name = iprot.readString();
            this.__isset.name = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 8:
          if (field.type == TType.DOUBLE) {
            this.load = iprot.readDouble();
            this.__isset.load = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 9:
          if (field.type == TType.DOUBLE) {
            this.osLoad = iprot.readDouble();
            this.__isset.osLoad = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 10:
          if (field.type == TType.I64) {
            this.tabletServerTime = iprot.readI64();
            this.__isset.tabletServerTime = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("TabletServerStatus");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    field.name = "queryRate";
    field.type = TType.DOUBLE;
    field.id = 1;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.queryRate);
    oprot.writeFieldEnd();
    field.name = "ingestRate";
    field.type = TType.DOUBLE;
    field.id = 2;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.ingestRate);
    oprot.writeFieldEnd();
    if (this.tabletRates != null) {
      field.name = "tabletRates";
      field.type = TType.LIST;
      field.id = 3;
      oprot.writeFieldBegin(field);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.tabletRates.size()));
        for (TabletRates _iter3 : this.tabletRates)        {
          _iter3.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    field.name = "totalRecords";
    field.type = TType.I64;
    field.id = 4;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.totalRecords);
    oprot.writeFieldEnd();
    field.name = "lastContact";
    field.type = TType.I64;
    field.id = 5;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.lastContact);
    oprot.writeFieldEnd();
    if (this.URL != null) {
      field.name = "URL";
      field.type = TType.STRING;
      field.id = 6;
      oprot.writeFieldBegin(field);
      oprot.writeString(this.URL);
      oprot.writeFieldEnd();
    }
    if (this.name != null) {
      field.name = "name";
      field.type = TType.STRING;
      field.id = 7;
      oprot.writeFieldBegin(field);
      oprot.writeString(this.name);
      oprot.writeFieldEnd();
    }
    field.name = "load";
    field.type = TType.DOUBLE;
    field.id = 8;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.load);
    oprot.writeFieldEnd();
    field.name = "osLoad";
    field.type = TType.DOUBLE;
    field.id = 9;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.osLoad);
    oprot.writeFieldEnd();
    field.name = "tabletServerTime";
    field.type = TType.I64;
    field.id = 10;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.tabletServerTime);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("TabletServerStatus(");
    sb.append("queryRate:");
    sb.append(this.queryRate);
    sb.append(",ingestRate:");
    sb.append(this.ingestRate);
    sb.append(",tabletRates:");
    sb.append(this.tabletRates);
    sb.append(",totalRecords:");
    sb.append(this.totalRecords);
    sb.append(",lastContact:");
    sb.append(this.lastContact);
    sb.append(",URL:");
    sb.append(this.URL);
    sb.append(",name:");
    sb.append(this.name);
    sb.append(",load:");
    sb.append(this.load);
    sb.append(",osLoad:");
    sb.append(this.osLoad);
    sb.append(",tabletServerTime:");
    sb.append(this.tabletServerTime);
    sb.append(")");
    return sb.toString();
  }

}

