/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.tabletserver.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class TabletMasterService {

  public interface Iface {

    public void sendTabletList(cloudbase.core.security.thrift.AuthInfo credentials) throws TException;

    public void loadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, byte[] location) throws TException;

    public void unloadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, boolean save) throws TException;

    public void shutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException;

    public void ping(cloudbase.core.security.thrift.AuthInfo credentials) throws TException;

    public void flush(cloudbase.core.security.thrift.AuthInfo credentials, Set<String> tables) throws TException;

  }

  public static class Client implements Iface {
    public Client(TProtocol prot)
    {
      this(prot, prot);
    }

    public Client(TProtocol iprot, TProtocol oprot)
    {
      iprot_ = iprot;
      oprot_ = oprot;
    }

    protected TProtocol iprot_;
    protected TProtocol oprot_;

    protected int seqid_;

    public TProtocol getInputProtocol()
    {
      return this.iprot_;
    }

    public TProtocol getOutputProtocol()
    {
      return this.oprot_;
    }

    public void sendTabletList(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      send_sendTabletList(credentials);
    }

    public void send_sendTabletList(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("sendTabletList", TMessageType.CALL, seqid_));
      sendTabletList_args args = new sendTabletList_args();
      args.credentials = credentials;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void loadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, byte[] location) throws TException
    {
      send_loadTablet(credentials, extent, location);
    }

    public void send_loadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, byte[] location) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("loadTablet", TMessageType.CALL, seqid_));
      loadTablet_args args = new loadTablet_args();
      args.credentials = credentials;
      args.extent = extent;
      args.location = location;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void unloadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, boolean save) throws TException
    {
      send_unloadTablet(credentials, extent, save);
    }

    public void send_unloadTablet(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent, boolean save) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("unloadTablet", TMessageType.CALL, seqid_));
      unloadTablet_args args = new unloadTablet_args();
      args.credentials = credentials;
      args.extent = extent;
      args.save = save;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void shutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException
    {
      send_shutdown(credentials, serverName, stage);
    }

    public void send_shutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("shutdown", TMessageType.CALL, seqid_));
      shutdown_args args = new shutdown_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.stage = stage;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void ping(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      send_ping(credentials);
    }

    public void send_ping(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("ping", TMessageType.CALL, seqid_));
      ping_args args = new ping_args();
      args.credentials = credentials;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void flush(cloudbase.core.security.thrift.AuthInfo credentials, Set<String> tables) throws TException
    {
      send_flush(credentials, tables);
    }

    public void send_flush(cloudbase.core.security.thrift.AuthInfo credentials, Set<String> tables) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("flush", TMessageType.CALL, seqid_));
      flush_args args = new flush_args();
      args.credentials = credentials;
      args.tables = tables;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

  }
  public static class Processor implements TProcessor {
    public Processor(Iface iface)
    {
      iface_ = iface;
      processMap_.put("sendTabletList", new sendTabletList());
      processMap_.put("loadTablet", new loadTablet());
      processMap_.put("unloadTablet", new unloadTablet());
      processMap_.put("shutdown", new shutdown());
      processMap_.put("ping", new ping());
      processMap_.put("flush", new flush());
    }

    protected static interface ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException;
    }

    private Iface iface_;
    protected final HashMap<String,ProcessFunction> processMap_ = new HashMap<String,ProcessFunction>();

    public boolean process(TProtocol iprot, TProtocol oprot) throws TException
    {
      TMessage msg = iprot.readMessageBegin();
      ProcessFunction fn = processMap_.get(msg.name);
      if (fn == null) {
        TProtocolUtil.skip(iprot, TType.STRUCT);
        iprot.readMessageEnd();
        TApplicationException x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
        oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return true;
      }
      fn.process(msg.seqid, iprot, oprot);
      return true;
    }

    private class sendTabletList implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        sendTabletList_args args = new sendTabletList_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.sendTabletList(args.credentials);
        return;
      }
    }

    private class loadTablet implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        loadTablet_args args = new loadTablet_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.loadTablet(args.credentials, args.extent, args.location);
        return;
      }
    }

    private class unloadTablet implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        unloadTablet_args args = new unloadTablet_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.unloadTablet(args.credentials, args.extent, args.save);
        return;
      }
    }

    private class shutdown implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        shutdown_args args = new shutdown_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.shutdown(args.credentials, args.serverName, args.stage);
        return;
      }
    }

    private class ping implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        ping_args args = new ping_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.ping(args.credentials);
        return;
      }
    }

    private class flush implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        flush_args args = new flush_args();
        args.read(iprot);
        iprot.readMessageEnd();
        iface_.flush(args.credentials, args.tables);
        return;
      }
    }

  }

  public static class sendTabletList_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
    }

    public sendTabletList_args() {
    }

    public sendTabletList_args(
      cloudbase.core.security.thrift.AuthInfo credentials)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof sendTabletList_args)
        return this.equals((sendTabletList_args)that);
      return false;
    }

    public boolean equals(sendTabletList_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("sendTabletList_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("sendTabletList_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class loadTablet_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public cloudbase.core.data.KeyExtent extent;
    public byte[] location;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean extent = false;
      public boolean location = false;
    }

    public loadTablet_args() {
    }

    public loadTablet_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      cloudbase.core.data.KeyExtent extent,
      byte[] location)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.extent = extent;
      this.__isset.extent = true;
      this.location = location;
      this.__isset.location = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof loadTablet_args)
        return this.equals((loadTablet_args)that);
      return false;
    }

    public boolean equals(loadTablet_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_extent = true && (this.extent != null);
      boolean that_present_extent = true && (that.extent != null);
      if (this_present_extent || that_present_extent) {
        if (!(this_present_extent && that_present_extent))
          return false;
        if (!this.extent.equals(that.extent))
          return false;
      }

      boolean this_present_location = true && (this.location != null);
      boolean that_present_location = true && (that.location != null);
      if (this_present_location || that_present_location) {
        if (!(this_present_location && that_present_location))
          return false;
        if (!java.util.Arrays.equals(this.location, that.location))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRUCT) {
              this.extent = new cloudbase.core.data.KeyExtent();
              this.extent.read(iprot);
              this.__isset.extent = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.location = iprot.readBinary();
              this.__isset.location = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("loadTablet_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.extent != null) {
        field.name = "extent";
        field.type = TType.STRUCT;
        field.id = 2;
        oprot.writeFieldBegin(field);
        this.extent.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.location != null) {
        field.name = "location";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeBinary(this.location);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("loadTablet_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",extent:");
      sb.append(this.extent.toString());
      sb.append(",location:");
      sb.append(this.location);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class unloadTablet_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public cloudbase.core.data.KeyExtent extent;
    public boolean save;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean extent = false;
      public boolean save = false;
    }

    public unloadTablet_args() {
    }

    public unloadTablet_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      cloudbase.core.data.KeyExtent extent,
      boolean save)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.extent = extent;
      this.__isset.extent = true;
      this.save = save;
      this.__isset.save = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof unloadTablet_args)
        return this.equals((unloadTablet_args)that);
      return false;
    }

    public boolean equals(unloadTablet_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_extent = true && (this.extent != null);
      boolean that_present_extent = true && (that.extent != null);
      if (this_present_extent || that_present_extent) {
        if (!(this_present_extent && that_present_extent))
          return false;
        if (!this.extent.equals(that.extent))
          return false;
      }

      boolean this_present_save = true;
      boolean that_present_save = true;
      if (this_present_save || that_present_save) {
        if (!(this_present_save && that_present_save))
          return false;
        if (this.save != that.save)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRUCT) {
              this.extent = new cloudbase.core.data.KeyExtent();
              this.extent.read(iprot);
              this.__isset.extent = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.BOOL) {
              this.save = iprot.readBool();
              this.__isset.save = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("unloadTablet_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.extent != null) {
        field.name = "extent";
        field.type = TType.STRUCT;
        field.id = 2;
        oprot.writeFieldBegin(field);
        this.extent.write(oprot);
        oprot.writeFieldEnd();
      }
      field.name = "save";
      field.type = TType.BOOL;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeBool(this.save);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("unloadTablet_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",extent:");
      sb.append(this.extent.toString());
      sb.append(",save:");
      sb.append(this.save);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class shutdown_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public int stage;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean stage = false;
    }

    public shutdown_args() {
    }

    public shutdown_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      int stage)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.stage = stage;
      this.__isset.stage = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof shutdown_args)
        return this.equals((shutdown_args)that);
      return false;
    }

    public boolean equals(shutdown_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_stage = true;
      boolean that_present_stage = true;
      if (this_present_stage || that_present_stage) {
        if (!(this_present_stage && that_present_stage))
          return false;
        if (this.stage != that.stage)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.I32) {
              this.stage = iprot.readI32();
              this.__isset.stage = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("shutdown_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      field.name = "stage";
      field.type = TType.I32;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.stage);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("shutdown_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",stage:");
      sb.append(this.stage);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class ping_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
    }

    public ping_args() {
    }

    public ping_args(
      cloudbase.core.security.thrift.AuthInfo credentials)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_args)
        return this.equals((ping_args)that);
      return false;
    }

    public boolean equals(ping_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("ping_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("ping_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class flush_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public Set<String> tables;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean tables = false;
    }

    public flush_args() {
    }

    public flush_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      Set<String> tables)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.tables = tables;
      this.__isset.tables = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof flush_args)
        return this.equals((flush_args)that);
      return false;
    }

    public boolean equals(flush_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_tables = true && (this.tables != null);
      boolean that_present_tables = true && (that.tables != null);
      if (this_present_tables || that_present_tables) {
        if (!(this_present_tables && that_present_tables))
          return false;
        if (!this.tables.equals(that.tables))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case -1:
            if (field.type == TType.SET) {
              {
                TSet _set4 = iprot.readSetBegin();
                this.tables = new HashSet<String>(2*_set4.size);
                for (int _i5 = 0; _i5 < _set4.size; ++_i5)
                {
                  String _elem6;
                  _elem6 = iprot.readString();
                  this.tables.add(_elem6);
                }
                iprot.readSetEnd();
              }
              this.__isset.tables = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("flush_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.tables != null) {
        field.name = "tables";
        field.type = TType.SET;
        field.id = -1;
        oprot.writeFieldBegin(field);
        {
          oprot.writeSetBegin(new TSet(TType.STRING, this.tables.size()));
          for (String _iter7 : this.tables)          {
            oprot.writeString(_iter7);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("flush_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",tables:");
      sb.append(this.tables);
      sb.append(")");
      return sb.toString();
    }

  }

}
