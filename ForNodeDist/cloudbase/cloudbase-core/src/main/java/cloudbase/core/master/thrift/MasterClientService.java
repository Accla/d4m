/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.master.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class MasterClientService {

  public interface Iface {

    public void createTable(cloudbase.core.security.thrift.AuthInfo credentials, String table, List<byte[]> splitPoints) throws cloudbase.core.security.thrift.ThriftSecurityException, TableCreationException, TException;

    public void deleteTable(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws cloudbase.core.security.thrift.ThriftSecurityException, TableDeletionException, TException;

    public void shutdown(cloudbase.core.security.thrift.AuthInfo credentials, boolean stopTabletServers) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void ping(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void flush(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public boolean setTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property, String value) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public boolean removeTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public boolean authenticateUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public Set<String> listUsers(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void createUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password, Set<Short> authorizations) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void dropUser(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void changePassword(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void changeAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user, Set<Short> authorizations) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public Set<Short> getUserAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public boolean hasSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int sysPerm) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public boolean hasTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int tblPerm) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void grantSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void revokeSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void grantTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public void revokeTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

    public String getRootTabletLocation() throws TException;

    public String getInstanceId() throws TException;

    public Set<String> getTables(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException;

  }

  public static class Client implements Iface {
    public Client(TProtocol prot)
    {
      this(prot, prot);
    }

    public Client(TProtocol iprot, TProtocol oprot)
    {
      iprot_ = iprot;
      oprot_ = oprot;
    }

    protected TProtocol iprot_;
    protected TProtocol oprot_;

    protected int seqid_;

    public TProtocol getInputProtocol()
    {
      return this.iprot_;
    }

    public TProtocol getOutputProtocol()
    {
      return this.oprot_;
    }

    public void createTable(cloudbase.core.security.thrift.AuthInfo credentials, String table, List<byte[]> splitPoints) throws cloudbase.core.security.thrift.ThriftSecurityException, TableCreationException, TException
    {
      send_createTable(credentials, table, splitPoints);
      recv_createTable();
    }

    public void send_createTable(cloudbase.core.security.thrift.AuthInfo credentials, String table, List<byte[]> splitPoints) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("createTable", TMessageType.CALL, seqid_));
      createTable_args args = new createTable_args();
      args.credentials = credentials;
      args.table = table;
      args.splitPoints = splitPoints;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_createTable() throws cloudbase.core.security.thrift.ThriftSecurityException, TableCreationException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      createTable_result result = new createTable_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      if (result.__isset.tcek) {
        throw result.tcek;
      }
      return;
    }

    public void deleteTable(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws cloudbase.core.security.thrift.ThriftSecurityException, TableDeletionException, TException
    {
      send_deleteTable(credentials, table);
      recv_deleteTable();
    }

    public void send_deleteTable(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("deleteTable", TMessageType.CALL, seqid_));
      deleteTable_args args = new deleteTable_args();
      args.credentials = credentials;
      args.table = table;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_deleteTable() throws cloudbase.core.security.thrift.ThriftSecurityException, TableDeletionException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      deleteTable_result result = new deleteTable_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      if (result.__isset.tde) {
        throw result.tde;
      }
      return;
    }

    public void shutdown(cloudbase.core.security.thrift.AuthInfo credentials, boolean stopTabletServers) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_shutdown(credentials, stopTabletServers);
      recv_shutdown();
    }

    public void send_shutdown(cloudbase.core.security.thrift.AuthInfo credentials, boolean stopTabletServers) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("shutdown", TMessageType.CALL, seqid_));
      shutdown_args args = new shutdown_args();
      args.credentials = credentials;
      args.stopTabletServers = stopTabletServers;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_shutdown() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      shutdown_result result = new shutdown_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void ping(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_ping(credentials);
      recv_ping();
    }

    public void send_ping(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("ping", TMessageType.CALL, seqid_));
      ping_args args = new ping_args();
      args.credentials = credentials;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_ping() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      ping_result result = new ping_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void flush(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_flush(credentials, table);
      recv_flush();
    }

    public void send_flush(cloudbase.core.security.thrift.AuthInfo credentials, String table) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("flush", TMessageType.CALL, seqid_));
      flush_args args = new flush_args();
      args.credentials = credentials;
      args.table = table;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_flush() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      flush_result result = new flush_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public boolean setTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property, String value) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_setTableProperty(credentials, table, property, value);
      return recv_setTableProperty();
    }

    public void send_setTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property, String value) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("setTableProperty", TMessageType.CALL, seqid_));
      setTableProperty_args args = new setTableProperty_args();
      args.credentials = credentials;
      args.table = table;
      args.property = property;
      args.value = value;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public boolean recv_setTableProperty() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      setTableProperty_result result = new setTableProperty_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "setTableProperty failed: unknown result");
    }

    public boolean removeTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_removeTableProperty(credentials, table, property);
      return recv_removeTableProperty();
    }

    public void send_removeTableProperty(cloudbase.core.security.thrift.AuthInfo credentials, String table, String property) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("removeTableProperty", TMessageType.CALL, seqid_));
      removeTableProperty_args args = new removeTableProperty_args();
      args.credentials = credentials;
      args.table = table;
      args.property = property;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public boolean recv_removeTableProperty() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      removeTableProperty_result result = new removeTableProperty_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "removeTableProperty failed: unknown result");
    }

    public boolean authenticateUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_authenticateUser(credentials, user, password);
      return recv_authenticateUser();
    }

    public void send_authenticateUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("authenticateUser", TMessageType.CALL, seqid_));
      authenticateUser_args args = new authenticateUser_args();
      args.credentials = credentials;
      args.user = user;
      args.password = password;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public boolean recv_authenticateUser() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      authenticateUser_result result = new authenticateUser_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "authenticateUser failed: unknown result");
    }

    public Set<String> listUsers(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_listUsers(credentials);
      return recv_listUsers();
    }

    public void send_listUsers(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("listUsers", TMessageType.CALL, seqid_));
      listUsers_args args = new listUsers_args();
      args.credentials = credentials;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Set<String> recv_listUsers() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      listUsers_result result = new listUsers_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "listUsers failed: unknown result");
    }

    public void createUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password, Set<Short> authorizations) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_createUser(credentials, user, password, authorizations);
      recv_createUser();
    }

    public void send_createUser(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password, Set<Short> authorizations) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("createUser", TMessageType.CALL, seqid_));
      createUser_args args = new createUser_args();
      args.credentials = credentials;
      args.user = user;
      args.password = password;
      args.authorizations = authorizations;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_createUser() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      createUser_result result = new createUser_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void dropUser(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_dropUser(credentials, user);
      recv_dropUser();
    }

    public void send_dropUser(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("dropUser", TMessageType.CALL, seqid_));
      dropUser_args args = new dropUser_args();
      args.credentials = credentials;
      args.user = user;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_dropUser() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      dropUser_result result = new dropUser_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void changePassword(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_changePassword(credentials, user, password);
      recv_changePassword();
    }

    public void send_changePassword(cloudbase.core.security.thrift.AuthInfo credentials, String user, byte[] password) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("changePassword", TMessageType.CALL, seqid_));
      changePassword_args args = new changePassword_args();
      args.credentials = credentials;
      args.user = user;
      args.password = password;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_changePassword() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      changePassword_result result = new changePassword_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void changeAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user, Set<Short> authorizations) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_changeAuthorizations(credentials, user, authorizations);
      recv_changeAuthorizations();
    }

    public void send_changeAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user, Set<Short> authorizations) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("changeAuthorizations", TMessageType.CALL, seqid_));
      changeAuthorizations_args args = new changeAuthorizations_args();
      args.credentials = credentials;
      args.user = user;
      args.authorizations = authorizations;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_changeAuthorizations() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      changeAuthorizations_result result = new changeAuthorizations_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public Set<Short> getUserAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_getUserAuthorizations(credentials, user);
      return recv_getUserAuthorizations();
    }

    public void send_getUserAuthorizations(cloudbase.core.security.thrift.AuthInfo credentials, String user) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getUserAuthorizations", TMessageType.CALL, seqid_));
      getUserAuthorizations_args args = new getUserAuthorizations_args();
      args.credentials = credentials;
      args.user = user;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Set<Short> recv_getUserAuthorizations() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      getUserAuthorizations_result result = new getUserAuthorizations_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getUserAuthorizations failed: unknown result");
    }

    public boolean hasSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int sysPerm) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_hasSystemPermission(credentials, user, sysPerm);
      return recv_hasSystemPermission();
    }

    public void send_hasSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int sysPerm) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("hasSystemPermission", TMessageType.CALL, seqid_));
      hasSystemPermission_args args = new hasSystemPermission_args();
      args.credentials = credentials;
      args.user = user;
      args.sysPerm = sysPerm;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public boolean recv_hasSystemPermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      hasSystemPermission_result result = new hasSystemPermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "hasSystemPermission failed: unknown result");
    }

    public boolean hasTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int tblPerm) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_hasTablePermission(credentials, user, table, tblPerm);
      return recv_hasTablePermission();
    }

    public void send_hasTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int tblPerm) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("hasTablePermission", TMessageType.CALL, seqid_));
      hasTablePermission_args args = new hasTablePermission_args();
      args.credentials = credentials;
      args.user = user;
      args.table = table;
      args.tblPerm = tblPerm;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public boolean recv_hasTablePermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      hasTablePermission_result result = new hasTablePermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "hasTablePermission failed: unknown result");
    }

    public void grantSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_grantSystemPermission(credentials, user, permission);
      recv_grantSystemPermission();
    }

    public void send_grantSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("grantSystemPermission", TMessageType.CALL, seqid_));
      grantSystemPermission_args args = new grantSystemPermission_args();
      args.credentials = credentials;
      args.user = user;
      args.permission = permission;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_grantSystemPermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      grantSystemPermission_result result = new grantSystemPermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void revokeSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_revokeSystemPermission(credentials, user, permission);
      recv_revokeSystemPermission();
    }

    public void send_revokeSystemPermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, int permission) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("revokeSystemPermission", TMessageType.CALL, seqid_));
      revokeSystemPermission_args args = new revokeSystemPermission_args();
      args.credentials = credentials;
      args.user = user;
      args.permission = permission;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_revokeSystemPermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      revokeSystemPermission_result result = new revokeSystemPermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void grantTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_grantTablePermission(credentials, user, table, permission);
      recv_grantTablePermission();
    }

    public void send_grantTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("grantTablePermission", TMessageType.CALL, seqid_));
      grantTablePermission_args args = new grantTablePermission_args();
      args.credentials = credentials;
      args.user = user;
      args.table = table;
      args.permission = permission;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_grantTablePermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      grantTablePermission_result result = new grantTablePermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public void revokeTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_revokeTablePermission(credentials, user, table, permission);
      recv_revokeTablePermission();
    }

    public void send_revokeTablePermission(cloudbase.core.security.thrift.AuthInfo credentials, String user, String table, int permission) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("revokeTablePermission", TMessageType.CALL, seqid_));
      revokeTablePermission_args args = new revokeTablePermission_args();
      args.credentials = credentials;
      args.user = user;
      args.table = table;
      args.permission = permission;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_revokeTablePermission() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      revokeTablePermission_result result = new revokeTablePermission_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.sec) {
        throw result.sec;
      }
      return;
    }

    public String getRootTabletLocation() throws TException
    {
      send_getRootTabletLocation();
      return recv_getRootTabletLocation();
    }

    public void send_getRootTabletLocation() throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getRootTabletLocation", TMessageType.CALL, seqid_));
      getRootTabletLocation_args args = new getRootTabletLocation_args();
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public String recv_getRootTabletLocation() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      getRootTabletLocation_result result = new getRootTabletLocation_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getRootTabletLocation failed: unknown result");
    }

    public String getInstanceId() throws TException
    {
      send_getInstanceId();
      return recv_getInstanceId();
    }

    public void send_getInstanceId() throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getInstanceId", TMessageType.CALL, seqid_));
      getInstanceId_args args = new getInstanceId_args();
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public String recv_getInstanceId() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      getInstanceId_result result = new getInstanceId_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getInstanceId failed: unknown result");
    }

    public Set<String> getTables(cloudbase.core.security.thrift.AuthInfo credentials) throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      send_getTables(credentials);
      return recv_getTables();
    }

    public void send_getTables(cloudbase.core.security.thrift.AuthInfo credentials) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("getTables", TMessageType.CALL, seqid_));
      getTables_args args = new getTables_args();
      args.credentials = credentials;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public Set<String> recv_getTables() throws cloudbase.core.security.thrift.ThriftSecurityException, TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      getTables_result result = new getTables_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      if (result.__isset.success) {
        return result.success;
      }
      if (result.__isset.sec) {
        throw result.sec;
      }
      throw new TApplicationException(TApplicationException.MISSING_RESULT, "getTables failed: unknown result");
    }

  }
  public static class Processor implements TProcessor {
    public Processor(Iface iface)
    {
      iface_ = iface;
      processMap_.put("createTable", new createTable());
      processMap_.put("deleteTable", new deleteTable());
      processMap_.put("shutdown", new shutdown());
      processMap_.put("ping", new ping());
      processMap_.put("flush", new flush());
      processMap_.put("setTableProperty", new setTableProperty());
      processMap_.put("removeTableProperty", new removeTableProperty());
      processMap_.put("authenticateUser", new authenticateUser());
      processMap_.put("listUsers", new listUsers());
      processMap_.put("createUser", new createUser());
      processMap_.put("dropUser", new dropUser());
      processMap_.put("changePassword", new changePassword());
      processMap_.put("changeAuthorizations", new changeAuthorizations());
      processMap_.put("getUserAuthorizations", new getUserAuthorizations());
      processMap_.put("hasSystemPermission", new hasSystemPermission());
      processMap_.put("hasTablePermission", new hasTablePermission());
      processMap_.put("grantSystemPermission", new grantSystemPermission());
      processMap_.put("revokeSystemPermission", new revokeSystemPermission());
      processMap_.put("grantTablePermission", new grantTablePermission());
      processMap_.put("revokeTablePermission", new revokeTablePermission());
      processMap_.put("getRootTabletLocation", new getRootTabletLocation());
      processMap_.put("getInstanceId", new getInstanceId());
      processMap_.put("getTables", new getTables());
    }

    protected static interface ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException;
    }

    private Iface iface_;
    protected final HashMap<String,ProcessFunction> processMap_ = new HashMap<String,ProcessFunction>();

    public boolean process(TProtocol iprot, TProtocol oprot) throws TException
    {
      TMessage msg = iprot.readMessageBegin();
      ProcessFunction fn = processMap_.get(msg.name);
      if (fn == null) {
        TProtocolUtil.skip(iprot, TType.STRUCT);
        iprot.readMessageEnd();
        TApplicationException x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
        oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return true;
      }
      fn.process(msg.seqid, iprot, oprot);
      return true;
    }

    private class createTable implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        createTable_args args = new createTable_args();
        args.read(iprot);
        iprot.readMessageEnd();
        createTable_result result = new createTable_result();
        try {
          iface_.createTable(args.credentials, args.table, args.splitPoints);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        } catch (TableCreationException tcek) {
          result.tcek = tcek;
          result.__isset.tcek = true;
        }
        oprot.writeMessageBegin(new TMessage("createTable", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class deleteTable implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        deleteTable_args args = new deleteTable_args();
        args.read(iprot);
        iprot.readMessageEnd();
        deleteTable_result result = new deleteTable_result();
        try {
          iface_.deleteTable(args.credentials, args.table);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        } catch (TableDeletionException tde) {
          result.tde = tde;
          result.__isset.tde = true;
        }
        oprot.writeMessageBegin(new TMessage("deleteTable", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class shutdown implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        shutdown_args args = new shutdown_args();
        args.read(iprot);
        iprot.readMessageEnd();
        shutdown_result result = new shutdown_result();
        try {
          iface_.shutdown(args.credentials, args.stopTabletServers);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("shutdown", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class ping implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        ping_args args = new ping_args();
        args.read(iprot);
        iprot.readMessageEnd();
        ping_result result = new ping_result();
        try {
          iface_.ping(args.credentials);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("ping", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class flush implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        flush_args args = new flush_args();
        args.read(iprot);
        iprot.readMessageEnd();
        flush_result result = new flush_result();
        try {
          iface_.flush(args.credentials, args.table);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("flush", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class setTableProperty implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        setTableProperty_args args = new setTableProperty_args();
        args.read(iprot);
        iprot.readMessageEnd();
        setTableProperty_result result = new setTableProperty_result();
        try {
          result.success = iface_.setTableProperty(args.credentials, args.table, args.property, args.value);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("setTableProperty", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class removeTableProperty implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        removeTableProperty_args args = new removeTableProperty_args();
        args.read(iprot);
        iprot.readMessageEnd();
        removeTableProperty_result result = new removeTableProperty_result();
        try {
          result.success = iface_.removeTableProperty(args.credentials, args.table, args.property);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("removeTableProperty", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class authenticateUser implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        authenticateUser_args args = new authenticateUser_args();
        args.read(iprot);
        iprot.readMessageEnd();
        authenticateUser_result result = new authenticateUser_result();
        try {
          result.success = iface_.authenticateUser(args.credentials, args.user, args.password);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("authenticateUser", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class listUsers implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        listUsers_args args = new listUsers_args();
        args.read(iprot);
        iprot.readMessageEnd();
        listUsers_result result = new listUsers_result();
        try {
          result.success = iface_.listUsers(args.credentials);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("listUsers", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class createUser implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        createUser_args args = new createUser_args();
        args.read(iprot);
        iprot.readMessageEnd();
        createUser_result result = new createUser_result();
        try {
          iface_.createUser(args.credentials, args.user, args.password, args.authorizations);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("createUser", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class dropUser implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        dropUser_args args = new dropUser_args();
        args.read(iprot);
        iprot.readMessageEnd();
        dropUser_result result = new dropUser_result();
        try {
          iface_.dropUser(args.credentials, args.user);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("dropUser", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class changePassword implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        changePassword_args args = new changePassword_args();
        args.read(iprot);
        iprot.readMessageEnd();
        changePassword_result result = new changePassword_result();
        try {
          iface_.changePassword(args.credentials, args.user, args.password);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("changePassword", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class changeAuthorizations implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        changeAuthorizations_args args = new changeAuthorizations_args();
        args.read(iprot);
        iprot.readMessageEnd();
        changeAuthorizations_result result = new changeAuthorizations_result();
        try {
          iface_.changeAuthorizations(args.credentials, args.user, args.authorizations);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("changeAuthorizations", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getUserAuthorizations implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getUserAuthorizations_args args = new getUserAuthorizations_args();
        args.read(iprot);
        iprot.readMessageEnd();
        getUserAuthorizations_result result = new getUserAuthorizations_result();
        try {
          result.success = iface_.getUserAuthorizations(args.credentials, args.user);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("getUserAuthorizations", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class hasSystemPermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        hasSystemPermission_args args = new hasSystemPermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        hasSystemPermission_result result = new hasSystemPermission_result();
        try {
          result.success = iface_.hasSystemPermission(args.credentials, args.user, args.sysPerm);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("hasSystemPermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class hasTablePermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        hasTablePermission_args args = new hasTablePermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        hasTablePermission_result result = new hasTablePermission_result();
        try {
          result.success = iface_.hasTablePermission(args.credentials, args.user, args.table, args.tblPerm);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("hasTablePermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class grantSystemPermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        grantSystemPermission_args args = new grantSystemPermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        grantSystemPermission_result result = new grantSystemPermission_result();
        try {
          iface_.grantSystemPermission(args.credentials, args.user, args.permission);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("grantSystemPermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class revokeSystemPermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        revokeSystemPermission_args args = new revokeSystemPermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        revokeSystemPermission_result result = new revokeSystemPermission_result();
        try {
          iface_.revokeSystemPermission(args.credentials, args.user, args.permission);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("revokeSystemPermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class grantTablePermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        grantTablePermission_args args = new grantTablePermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        grantTablePermission_result result = new grantTablePermission_result();
        try {
          iface_.grantTablePermission(args.credentials, args.user, args.table, args.permission);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("grantTablePermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class revokeTablePermission implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        revokeTablePermission_args args = new revokeTablePermission_args();
        args.read(iprot);
        iprot.readMessageEnd();
        revokeTablePermission_result result = new revokeTablePermission_result();
        try {
          iface_.revokeTablePermission(args.credentials, args.user, args.table, args.permission);
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("revokeTablePermission", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getRootTabletLocation implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getRootTabletLocation_args args = new getRootTabletLocation_args();
        args.read(iprot);
        iprot.readMessageEnd();
        getRootTabletLocation_result result = new getRootTabletLocation_result();
        result.success = iface_.getRootTabletLocation();
        result.__isset.success = true;
        oprot.writeMessageBegin(new TMessage("getRootTabletLocation", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getInstanceId implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getInstanceId_args args = new getInstanceId_args();
        args.read(iprot);
        iprot.readMessageEnd();
        getInstanceId_result result = new getInstanceId_result();
        result.success = iface_.getInstanceId();
        result.__isset.success = true;
        oprot.writeMessageBegin(new TMessage("getInstanceId", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class getTables implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        getTables_args args = new getTables_args();
        args.read(iprot);
        iprot.readMessageEnd();
        getTables_result result = new getTables_result();
        try {
          result.success = iface_.getTables(args.credentials);
          result.__isset.success = true;
        } catch (cloudbase.core.security.thrift.ThriftSecurityException sec) {
          result.sec = sec;
          result.__isset.sec = true;
        }
        oprot.writeMessageBegin(new TMessage("getTables", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

  }

  public static class createTable_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String table;
    public List<byte[]> splitPoints;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean table = false;
      public boolean splitPoints = false;
    }

    public createTable_args() {
    }

    public createTable_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String table,
      List<byte[]> splitPoints)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.table = table;
      this.__isset.table = true;
      this.splitPoints = splitPoints;
      this.__isset.splitPoints = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createTable_args)
        return this.equals((createTable_args)that);
      return false;
    }

    public boolean equals(createTable_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_splitPoints = true && (this.splitPoints != null);
      boolean that_present_splitPoints = true && (that.splitPoints != null);
      if (this_present_splitPoints || that_present_splitPoints) {
        if (!(this_present_splitPoints && that_present_splitPoints))
          return false;
        if (!this.splitPoints.equals(that.splitPoints))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.LIST) {
              {
                TList _list12 = iprot.readListBegin();
                this.splitPoints = new ArrayList<byte[]>(_list12.size);
                for (int _i13 = 0; _i13 < _list12.size; ++_i13)
                {
                  byte[] _elem14 = null;
                  _elem14 = iprot.readBinary();
                  this.splitPoints.add(_elem14);
                }
                iprot.readListEnd();
              }
              this.__isset.splitPoints = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("createTable_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      if (this.splitPoints != null) {
        field.name = "splitPoints";
        field.type = TType.LIST;
        field.id = 3;
        oprot.writeFieldBegin(field);
        {
          oprot.writeListBegin(new TList(TType.STRING, this.splitPoints.size()));
          for (byte[] _iter15 : this.splitPoints)          {
            oprot.writeBinary(_iter15);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("createTable_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",splitPoints:");
      sb.append(this.splitPoints);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class createTable_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;
    public TableCreationException tcek;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
      public boolean tcek = false;
    }

    public createTable_result() {
    }

    public createTable_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec,
      TableCreationException tcek)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
      this.tcek = tcek;
      this.__isset.tcek = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createTable_result)
        return this.equals((createTable_result)that);
      return false;
    }

    public boolean equals(createTable_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      boolean this_present_tcek = true && (this.tcek != null);
      boolean that_present_tcek = true && (that.tcek != null);
      if (this_present_tcek || that_present_tcek) {
        if (!(this_present_tcek && that_present_tcek))
          return false;
        if (!this.tcek.equals(that.tcek))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRUCT) {
              this.tcek = new TableCreationException();
              this.tcek.read(iprot);
              this.__isset.tcek = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("createTable_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      } else if (this.__isset.tcek) {
        if (this.tcek != null) {
          field.name = "tcek";
          field.type = TType.STRUCT;
          field.id = 2;
          oprot.writeFieldBegin(field);
          this.tcek.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("createTable_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(",tcek:");
      sb.append(this.tcek.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class deleteTable_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String table;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean table = false;
    }

    public deleteTable_args() {
    }

    public deleteTable_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String table)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.table = table;
      this.__isset.table = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteTable_args)
        return this.equals((deleteTable_args)that);
      return false;
    }

    public boolean equals(deleteTable_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("deleteTable_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("deleteTable_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",table:");
      sb.append(this.table);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class deleteTable_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;
    public TableDeletionException tde;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
      public boolean tde = false;
    }

    public deleteTable_result() {
    }

    public deleteTable_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec,
      TableDeletionException tde)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
      this.tde = tde;
      this.__isset.tde = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof deleteTable_result)
        return this.equals((deleteTable_result)that);
      return false;
    }

    public boolean equals(deleteTable_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      boolean this_present_tde = true && (this.tde != null);
      boolean that_present_tde = true && (that.tde != null);
      if (this_present_tde || that_present_tde) {
        if (!(this_present_tde && that_present_tde))
          return false;
        if (!this.tde.equals(that.tde))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRUCT) {
              this.tde = new TableDeletionException();
              this.tde.read(iprot);
              this.__isset.tde = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("deleteTable_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      } else if (this.__isset.tde) {
        if (this.tde != null) {
          field.name = "tde";
          field.type = TType.STRUCT;
          field.id = 2;
          oprot.writeFieldBegin(field);
          this.tde.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("deleteTable_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(",tde:");
      sb.append(this.tde.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class shutdown_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public boolean stopTabletServers;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean stopTabletServers = false;
    }

    public shutdown_args() {
    }

    public shutdown_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      boolean stopTabletServers)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.stopTabletServers = stopTabletServers;
      this.__isset.stopTabletServers = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof shutdown_args)
        return this.equals((shutdown_args)that);
      return false;
    }

    public boolean equals(shutdown_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_stopTabletServers = true;
      boolean that_present_stopTabletServers = true;
      if (this_present_stopTabletServers || that_present_stopTabletServers) {
        if (!(this_present_stopTabletServers && that_present_stopTabletServers))
          return false;
        if (this.stopTabletServers != that.stopTabletServers)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.BOOL) {
              this.stopTabletServers = iprot.readBool();
              this.__isset.stopTabletServers = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("shutdown_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      field.name = "stopTabletServers";
      field.type = TType.BOOL;
      field.id = 2;
      oprot.writeFieldBegin(field);
      oprot.writeBool(this.stopTabletServers);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("shutdown_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",stopTabletServers:");
      sb.append(this.stopTabletServers);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class shutdown_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public shutdown_result() {
    }

    public shutdown_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof shutdown_result)
        return this.equals((shutdown_result)that);
      return false;
    }

    public boolean equals(shutdown_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("shutdown_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("shutdown_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class ping_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
    }

    public ping_args() {
    }

    public ping_args(
      cloudbase.core.security.thrift.AuthInfo credentials)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_args)
        return this.equals((ping_args)that);
      return false;
    }

    public boolean equals(ping_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("ping_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("ping_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class ping_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public ping_result() {
    }

    public ping_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof ping_result)
        return this.equals((ping_result)that);
      return false;
    }

    public boolean equals(ping_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("ping_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("ping_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class flush_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String table;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean table = false;
    }

    public flush_args() {
    }

    public flush_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String table)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.table = table;
      this.__isset.table = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof flush_args)
        return this.equals((flush_args)that);
      return false;
    }

    public boolean equals(flush_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("flush_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("flush_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",table:");
      sb.append(this.table);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class flush_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public flush_result() {
    }

    public flush_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof flush_result)
        return this.equals((flush_result)that);
      return false;
    }

    public boolean equals(flush_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("flush_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("flush_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class setTableProperty_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String table;
    public String property;
    public String value;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean table = false;
      public boolean property = false;
      public boolean value = false;
    }

    public setTableProperty_args() {
    }

    public setTableProperty_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String table,
      String property,
      String value)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.table = table;
      this.__isset.table = true;
      this.property = property;
      this.__isset.property = true;
      this.value = value;
      this.__isset.value = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof setTableProperty_args)
        return this.equals((setTableProperty_args)that);
      return false;
    }

    public boolean equals(setTableProperty_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_property = true && (this.property != null);
      boolean that_present_property = true && (that.property != null);
      if (this_present_property || that_present_property) {
        if (!(this_present_property && that_present_property))
          return false;
        if (!this.property.equals(that.property))
          return false;
      }

      boolean this_present_value = true && (this.value != null);
      boolean that_present_value = true && (that.value != null);
      if (this_present_value || that_present_value) {
        if (!(this_present_value && that_present_value))
          return false;
        if (!this.value.equals(that.value))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.property = iprot.readString();
              this.__isset.property = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.STRING) {
              this.value = iprot.readString();
              this.__isset.value = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("setTableProperty_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      if (this.property != null) {
        field.name = "property";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.property);
        oprot.writeFieldEnd();
      }
      if (this.value != null) {
        field.name = "value";
        field.type = TType.STRING;
        field.id = 4;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.value);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("setTableProperty_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",property:");
      sb.append(this.property);
      sb.append(",value:");
      sb.append(this.value);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class setTableProperty_result implements TBase, java.io.Serializable   {
    public boolean success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public setTableProperty_result() {
    }

    public setTableProperty_result(
      boolean success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof setTableProperty_result)
        return this.equals((setTableProperty_result)that);
      return false;
    }

    public boolean equals(setTableProperty_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.BOOL) {
              this.success = iprot.readBool();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("setTableProperty_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        field.name = "success";
        field.type = TType.BOOL;
        field.id = 0;
        oprot.writeFieldBegin(field);
        oprot.writeBool(this.success);
        oprot.writeFieldEnd();
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("setTableProperty_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class removeTableProperty_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String table;
    public String property;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean table = false;
      public boolean property = false;
    }

    public removeTableProperty_args() {
    }

    public removeTableProperty_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String table,
      String property)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.table = table;
      this.__isset.table = true;
      this.property = property;
      this.__isset.property = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof removeTableProperty_args)
        return this.equals((removeTableProperty_args)that);
      return false;
    }

    public boolean equals(removeTableProperty_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_property = true && (this.property != null);
      boolean that_present_property = true && (that.property != null);
      if (this_present_property || that_present_property) {
        if (!(this_present_property && that_present_property))
          return false;
        if (!this.property.equals(that.property))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.property = iprot.readString();
              this.__isset.property = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("removeTableProperty_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      if (this.property != null) {
        field.name = "property";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.property);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("removeTableProperty_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",property:");
      sb.append(this.property);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class removeTableProperty_result implements TBase, java.io.Serializable   {
    public boolean success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public removeTableProperty_result() {
    }

    public removeTableProperty_result(
      boolean success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof removeTableProperty_result)
        return this.equals((removeTableProperty_result)that);
      return false;
    }

    public boolean equals(removeTableProperty_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.BOOL) {
              this.success = iprot.readBool();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("removeTableProperty_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        field.name = "success";
        field.type = TType.BOOL;
        field.id = 0;
        oprot.writeFieldBegin(field);
        oprot.writeBool(this.success);
        oprot.writeFieldEnd();
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("removeTableProperty_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class authenticateUser_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public byte[] password;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean password = false;
    }

    public authenticateUser_args() {
    }

    public authenticateUser_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      byte[] password)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.password = password;
      this.__isset.password = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof authenticateUser_args)
        return this.equals((authenticateUser_args)that);
      return false;
    }

    public boolean equals(authenticateUser_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_password = true && (this.password != null);
      boolean that_present_password = true && (that.password != null);
      if (this_present_password || that_present_password) {
        if (!(this_present_password && that_present_password))
          return false;
        if (!java.util.Arrays.equals(this.password, that.password))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.password = iprot.readBinary();
              this.__isset.password = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("authenticateUser_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.password != null) {
        field.name = "password";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeBinary(this.password);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("authenticateUser_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",password:");
      sb.append(this.password);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class authenticateUser_result implements TBase, java.io.Serializable   {
    public boolean success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public authenticateUser_result() {
    }

    public authenticateUser_result(
      boolean success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof authenticateUser_result)
        return this.equals((authenticateUser_result)that);
      return false;
    }

    public boolean equals(authenticateUser_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.BOOL) {
              this.success = iprot.readBool();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("authenticateUser_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        field.name = "success";
        field.type = TType.BOOL;
        field.id = 0;
        oprot.writeFieldBegin(field);
        oprot.writeBool(this.success);
        oprot.writeFieldEnd();
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("authenticateUser_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class listUsers_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
    }

    public listUsers_args() {
    }

    public listUsers_args(
      cloudbase.core.security.thrift.AuthInfo credentials)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof listUsers_args)
        return this.equals((listUsers_args)that);
      return false;
    }

    public boolean equals(listUsers_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("listUsers_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("listUsers_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class listUsers_result implements TBase, java.io.Serializable   {
    public Set<String> success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public listUsers_result() {
    }

    public listUsers_result(
      Set<String> success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof listUsers_result)
        return this.equals((listUsers_result)that);
      return false;
    }

    public boolean equals(listUsers_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && (this.success != null);
      boolean that_present_success = true && (that.success != null);
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.SET) {
              {
                TSet _set16 = iprot.readSetBegin();
                this.success = new HashSet<String>(2*_set16.size);
                for (int _i17 = 0; _i17 < _set16.size; ++_i17)
                {
                  String _elem18;
                  _elem18 = iprot.readString();
                  this.success.add(_elem18);
                }
                iprot.readSetEnd();
              }
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("listUsers_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        if (this.success != null) {
          field.name = "success";
          field.type = TType.SET;
          field.id = 0;
          oprot.writeFieldBegin(field);
          {
            oprot.writeSetBegin(new TSet(TType.STRING, this.success.size()));
            for (String _iter19 : this.success)            {
              oprot.writeString(_iter19);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("listUsers_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class createUser_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public byte[] password;
    public Set<Short> authorizations;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean password = false;
      public boolean authorizations = false;
    }

    public createUser_args() {
    }

    public createUser_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      byte[] password,
      Set<Short> authorizations)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.password = password;
      this.__isset.password = true;
      this.authorizations = authorizations;
      this.__isset.authorizations = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createUser_args)
        return this.equals((createUser_args)that);
      return false;
    }

    public boolean equals(createUser_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_password = true && (this.password != null);
      boolean that_present_password = true && (that.password != null);
      if (this_present_password || that_present_password) {
        if (!(this_present_password && that_present_password))
          return false;
        if (!java.util.Arrays.equals(this.password, that.password))
          return false;
      }

      boolean this_present_authorizations = true && (this.authorizations != null);
      boolean that_present_authorizations = true && (that.authorizations != null);
      if (this_present_authorizations || that_present_authorizations) {
        if (!(this_present_authorizations && that_present_authorizations))
          return false;
        if (!this.authorizations.equals(that.authorizations))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.password = iprot.readBinary();
              this.__isset.password = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.SET) {
              {
                TSet _set20 = iprot.readSetBegin();
                this.authorizations = new HashSet<Short>(2*_set20.size);
                for (int _i21 = 0; _i21 < _set20.size; ++_i21)
                {
                  short _elem22;
                  _elem22 = iprot.readI16();
                  this.authorizations.add(_elem22);
                }
                iprot.readSetEnd();
              }
              this.__isset.authorizations = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("createUser_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.password != null) {
        field.name = "password";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeBinary(this.password);
        oprot.writeFieldEnd();
      }
      if (this.authorizations != null) {
        field.name = "authorizations";
        field.type = TType.SET;
        field.id = 4;
        oprot.writeFieldBegin(field);
        {
          oprot.writeSetBegin(new TSet(TType.I16, this.authorizations.size()));
          for (short _iter23 : this.authorizations)          {
            oprot.writeI16(_iter23);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("createUser_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",password:");
      sb.append(this.password);
      sb.append(",authorizations:");
      sb.append(this.authorizations);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class createUser_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public createUser_result() {
    }

    public createUser_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof createUser_result)
        return this.equals((createUser_result)that);
      return false;
    }

    public boolean equals(createUser_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("createUser_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("createUser_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class dropUser_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
    }

    public dropUser_args() {
    }

    public dropUser_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof dropUser_args)
        return this.equals((dropUser_args)that);
      return false;
    }

    public boolean equals(dropUser_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("dropUser_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("dropUser_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class dropUser_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public dropUser_result() {
    }

    public dropUser_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof dropUser_result)
        return this.equals((dropUser_result)that);
      return false;
    }

    public boolean equals(dropUser_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("dropUser_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("dropUser_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class changePassword_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public byte[] password;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean password = false;
    }

    public changePassword_args() {
    }

    public changePassword_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      byte[] password)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.password = password;
      this.__isset.password = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof changePassword_args)
        return this.equals((changePassword_args)that);
      return false;
    }

    public boolean equals(changePassword_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_password = true && (this.password != null);
      boolean that_present_password = true && (that.password != null);
      if (this_present_password || that_present_password) {
        if (!(this_present_password && that_present_password))
          return false;
        if (!java.util.Arrays.equals(this.password, that.password))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.password = iprot.readBinary();
              this.__isset.password = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("changePassword_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.password != null) {
        field.name = "password";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeBinary(this.password);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("changePassword_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",password:");
      sb.append(this.password);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class changePassword_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public changePassword_result() {
    }

    public changePassword_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof changePassword_result)
        return this.equals((changePassword_result)that);
      return false;
    }

    public boolean equals(changePassword_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("changePassword_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("changePassword_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class changeAuthorizations_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public Set<Short> authorizations;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean authorizations = false;
    }

    public changeAuthorizations_args() {
    }

    public changeAuthorizations_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      Set<Short> authorizations)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.authorizations = authorizations;
      this.__isset.authorizations = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof changeAuthorizations_args)
        return this.equals((changeAuthorizations_args)that);
      return false;
    }

    public boolean equals(changeAuthorizations_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_authorizations = true && (this.authorizations != null);
      boolean that_present_authorizations = true && (that.authorizations != null);
      if (this_present_authorizations || that_present_authorizations) {
        if (!(this_present_authorizations && that_present_authorizations))
          return false;
        if (!this.authorizations.equals(that.authorizations))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.SET) {
              {
                TSet _set24 = iprot.readSetBegin();
                this.authorizations = new HashSet<Short>(2*_set24.size);
                for (int _i25 = 0; _i25 < _set24.size; ++_i25)
                {
                  short _elem26;
                  _elem26 = iprot.readI16();
                  this.authorizations.add(_elem26);
                }
                iprot.readSetEnd();
              }
              this.__isset.authorizations = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("changeAuthorizations_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.authorizations != null) {
        field.name = "authorizations";
        field.type = TType.SET;
        field.id = 3;
        oprot.writeFieldBegin(field);
        {
          oprot.writeSetBegin(new TSet(TType.I16, this.authorizations.size()));
          for (short _iter27 : this.authorizations)          {
            oprot.writeI16(_iter27);
          }
          oprot.writeSetEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("changeAuthorizations_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",authorizations:");
      sb.append(this.authorizations);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class changeAuthorizations_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public changeAuthorizations_result() {
    }

    public changeAuthorizations_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof changeAuthorizations_result)
        return this.equals((changeAuthorizations_result)that);
      return false;
    }

    public boolean equals(changeAuthorizations_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("changeAuthorizations_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("changeAuthorizations_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getUserAuthorizations_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
    }

    public getUserAuthorizations_args() {
    }

    public getUserAuthorizations_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getUserAuthorizations_args)
        return this.equals((getUserAuthorizations_args)that);
      return false;
    }

    public boolean equals(getUserAuthorizations_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getUserAuthorizations_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getUserAuthorizations_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getUserAuthorizations_result implements TBase, java.io.Serializable   {
    public Set<Short> success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public getUserAuthorizations_result() {
    }

    public getUserAuthorizations_result(
      Set<Short> success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getUserAuthorizations_result)
        return this.equals((getUserAuthorizations_result)that);
      return false;
    }

    public boolean equals(getUserAuthorizations_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && (this.success != null);
      boolean that_present_success = true && (that.success != null);
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.SET) {
              {
                TSet _set28 = iprot.readSetBegin();
                this.success = new HashSet<Short>(2*_set28.size);
                for (int _i29 = 0; _i29 < _set28.size; ++_i29)
                {
                  short _elem30;
                  _elem30 = iprot.readI16();
                  this.success.add(_elem30);
                }
                iprot.readSetEnd();
              }
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getUserAuthorizations_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        if (this.success != null) {
          field.name = "success";
          field.type = TType.SET;
          field.id = 0;
          oprot.writeFieldBegin(field);
          {
            oprot.writeSetBegin(new TSet(TType.I16, this.success.size()));
            for (short _iter31 : this.success)            {
              oprot.writeI16(_iter31);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getUserAuthorizations_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class hasSystemPermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public int sysPerm;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean sysPerm = false;
    }

    public hasSystemPermission_args() {
    }

    public hasSystemPermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      int sysPerm)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.sysPerm = sysPerm;
      this.__isset.sysPerm = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof hasSystemPermission_args)
        return this.equals((hasSystemPermission_args)that);
      return false;
    }

    public boolean equals(hasSystemPermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_sysPerm = true;
      boolean that_present_sysPerm = true;
      if (this_present_sysPerm || that_present_sysPerm) {
        if (!(this_present_sysPerm && that_present_sysPerm))
          return false;
        if (this.sysPerm != that.sysPerm)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.I32) {
              this.sysPerm = iprot.readI32();
              this.__isset.sysPerm = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("hasSystemPermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      field.name = "sysPerm";
      field.type = TType.I32;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.sysPerm);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("hasSystemPermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",sysPerm:");
      sb.append(this.sysPerm);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class hasSystemPermission_result implements TBase, java.io.Serializable   {
    public boolean success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public hasSystemPermission_result() {
    }

    public hasSystemPermission_result(
      boolean success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof hasSystemPermission_result)
        return this.equals((hasSystemPermission_result)that);
      return false;
    }

    public boolean equals(hasSystemPermission_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.BOOL) {
              this.success = iprot.readBool();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("hasSystemPermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        field.name = "success";
        field.type = TType.BOOL;
        field.id = 0;
        oprot.writeFieldBegin(field);
        oprot.writeBool(this.success);
        oprot.writeFieldEnd();
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("hasSystemPermission_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class hasTablePermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public String table;
    public int tblPerm;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean table = false;
      public boolean tblPerm = false;
    }

    public hasTablePermission_args() {
    }

    public hasTablePermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      String table,
      int tblPerm)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.table = table;
      this.__isset.table = true;
      this.tblPerm = tblPerm;
      this.__isset.tblPerm = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof hasTablePermission_args)
        return this.equals((hasTablePermission_args)that);
      return false;
    }

    public boolean equals(hasTablePermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_tblPerm = true;
      boolean that_present_tblPerm = true;
      if (this_present_tblPerm || that_present_tblPerm) {
        if (!(this_present_tblPerm && that_present_tblPerm))
          return false;
        if (this.tblPerm != that.tblPerm)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.I32) {
              this.tblPerm = iprot.readI32();
              this.__isset.tblPerm = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("hasTablePermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      field.name = "tblPerm";
      field.type = TType.I32;
      field.id = 4;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.tblPerm);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("hasTablePermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",tblPerm:");
      sb.append(this.tblPerm);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class hasTablePermission_result implements TBase, java.io.Serializable   {
    public boolean success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public hasTablePermission_result() {
    }

    public hasTablePermission_result(
      boolean success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof hasTablePermission_result)
        return this.equals((hasTablePermission_result)that);
      return false;
    }

    public boolean equals(hasTablePermission_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true;
      boolean that_present_success = true;
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (this.success != that.success)
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.BOOL) {
              this.success = iprot.readBool();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("hasTablePermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        field.name = "success";
        field.type = TType.BOOL;
        field.id = 0;
        oprot.writeFieldBegin(field);
        oprot.writeBool(this.success);
        oprot.writeFieldEnd();
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("hasTablePermission_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class grantSystemPermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public int permission;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean permission = false;
    }

    public grantSystemPermission_args() {
    }

    public grantSystemPermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      int permission)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.permission = permission;
      this.__isset.permission = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof grantSystemPermission_args)
        return this.equals((grantSystemPermission_args)that);
      return false;
    }

    public boolean equals(grantSystemPermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_permission = true;
      boolean that_present_permission = true;
      if (this_present_permission || that_present_permission) {
        if (!(this_present_permission && that_present_permission))
          return false;
        if (this.permission != that.permission)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.I32) {
              this.permission = iprot.readI32();
              this.__isset.permission = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("grantSystemPermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      field.name = "permission";
      field.type = TType.I32;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.permission);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("grantSystemPermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",permission:");
      sb.append(this.permission);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class grantSystemPermission_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public grantSystemPermission_result() {
    }

    public grantSystemPermission_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof grantSystemPermission_result)
        return this.equals((grantSystemPermission_result)that);
      return false;
    }

    public boolean equals(grantSystemPermission_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("grantSystemPermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("grantSystemPermission_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class revokeSystemPermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public int permission;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean permission = false;
    }

    public revokeSystemPermission_args() {
    }

    public revokeSystemPermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      int permission)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.permission = permission;
      this.__isset.permission = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof revokeSystemPermission_args)
        return this.equals((revokeSystemPermission_args)that);
      return false;
    }

    public boolean equals(revokeSystemPermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_permission = true;
      boolean that_present_permission = true;
      if (this_present_permission || that_present_permission) {
        if (!(this_present_permission && that_present_permission))
          return false;
        if (this.permission != that.permission)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.I32) {
              this.permission = iprot.readI32();
              this.__isset.permission = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("revokeSystemPermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      field.name = "permission";
      field.type = TType.I32;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.permission);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("revokeSystemPermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",permission:");
      sb.append(this.permission);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class revokeSystemPermission_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public revokeSystemPermission_result() {
    }

    public revokeSystemPermission_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof revokeSystemPermission_result)
        return this.equals((revokeSystemPermission_result)that);
      return false;
    }

    public boolean equals(revokeSystemPermission_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("revokeSystemPermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("revokeSystemPermission_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class grantTablePermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public String table;
    public int permission;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean table = false;
      public boolean permission = false;
    }

    public grantTablePermission_args() {
    }

    public grantTablePermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      String table,
      int permission)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.table = table;
      this.__isset.table = true;
      this.permission = permission;
      this.__isset.permission = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof grantTablePermission_args)
        return this.equals((grantTablePermission_args)that);
      return false;
    }

    public boolean equals(grantTablePermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_permission = true;
      boolean that_present_permission = true;
      if (this_present_permission || that_present_permission) {
        if (!(this_present_permission && that_present_permission))
          return false;
        if (this.permission != that.permission)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.I32) {
              this.permission = iprot.readI32();
              this.__isset.permission = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("grantTablePermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      field.name = "permission";
      field.type = TType.I32;
      field.id = 4;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.permission);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("grantTablePermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",permission:");
      sb.append(this.permission);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class grantTablePermission_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public grantTablePermission_result() {
    }

    public grantTablePermission_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof grantTablePermission_result)
        return this.equals((grantTablePermission_result)that);
      return false;
    }

    public boolean equals(grantTablePermission_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("grantTablePermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("grantTablePermission_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class revokeTablePermission_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String user;
    public String table;
    public int permission;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean user = false;
      public boolean table = false;
      public boolean permission = false;
    }

    public revokeTablePermission_args() {
    }

    public revokeTablePermission_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String user,
      String table,
      int permission)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.user = user;
      this.__isset.user = true;
      this.table = table;
      this.__isset.table = true;
      this.permission = permission;
      this.__isset.permission = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof revokeTablePermission_args)
        return this.equals((revokeTablePermission_args)that);
      return false;
    }

    public boolean equals(revokeTablePermission_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_user = true && (this.user != null);
      boolean that_present_user = true && (that.user != null);
      if (this_present_user || that_present_user) {
        if (!(this_present_user && that_present_user))
          return false;
        if (!this.user.equals(that.user))
          return false;
      }

      boolean this_present_table = true && (this.table != null);
      boolean that_present_table = true && (that.table != null);
      if (this_present_table || that_present_table) {
        if (!(this_present_table && that_present_table))
          return false;
        if (!this.table.equals(that.table))
          return false;
      }

      boolean this_present_permission = true;
      boolean that_present_permission = true;
      if (this_present_permission || that_present_permission) {
        if (!(this_present_permission && that_present_permission))
          return false;
        if (this.permission != that.permission)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.user = iprot.readString();
              this.__isset.user = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRING) {
              this.table = iprot.readString();
              this.__isset.table = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.I32) {
              this.permission = iprot.readI32();
              this.__isset.permission = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("revokeTablePermission_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.user != null) {
        field.name = "user";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.user);
        oprot.writeFieldEnd();
      }
      if (this.table != null) {
        field.name = "table";
        field.type = TType.STRING;
        field.id = 3;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.table);
        oprot.writeFieldEnd();
      }
      field.name = "permission";
      field.type = TType.I32;
      field.id = 4;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.permission);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("revokeTablePermission_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",user:");
      sb.append(this.user);
      sb.append(",table:");
      sb.append(this.table);
      sb.append(",permission:");
      sb.append(this.permission);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class revokeTablePermission_result implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean sec = false;
    }

    public revokeTablePermission_result() {
    }

    public revokeTablePermission_result(
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof revokeTablePermission_result)
        return this.equals((revokeTablePermission_result)that);
      return false;
    }

    public boolean equals(revokeTablePermission_result that) {
      if (that == null)
        return false;

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("revokeTablePermission_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("revokeTablePermission_result(");
      sb.append("sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getRootTabletLocation_args implements TBase, java.io.Serializable   {
    public getRootTabletLocation_args() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getRootTabletLocation_args)
        return this.equals((getRootTabletLocation_args)that);
      return false;
    }

    public boolean equals(getRootTabletLocation_args that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getRootTabletLocation_args");
      oprot.writeStructBegin(struct);
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getRootTabletLocation_args(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getRootTabletLocation_result implements TBase, java.io.Serializable   {
    public String success;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
    }

    public getRootTabletLocation_result() {
    }

    public getRootTabletLocation_result(
      String success)
    {
      this();
      this.success = success;
      this.__isset.success = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getRootTabletLocation_result)
        return this.equals((getRootTabletLocation_result)that);
      return false;
    }

    public boolean equals(getRootTabletLocation_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && (this.success != null);
      boolean that_present_success = true && (that.success != null);
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.STRING) {
              this.success = iprot.readString();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getRootTabletLocation_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        if (this.success != null) {
          field.name = "success";
          field.type = TType.STRING;
          field.id = 0;
          oprot.writeFieldBegin(field);
          oprot.writeString(this.success);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getRootTabletLocation_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getInstanceId_args implements TBase, java.io.Serializable   {
    public getInstanceId_args() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getInstanceId_args)
        return this.equals((getInstanceId_args)that);
      return false;
    }

    public boolean equals(getInstanceId_args that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getInstanceId_args");
      oprot.writeStructBegin(struct);
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getInstanceId_args(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getInstanceId_result implements TBase, java.io.Serializable   {
    public String success;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
    }

    public getInstanceId_result() {
    }

    public getInstanceId_result(
      String success)
    {
      this();
      this.success = success;
      this.__isset.success = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getInstanceId_result)
        return this.equals((getInstanceId_result)that);
      return false;
    }

    public boolean equals(getInstanceId_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && (this.success != null);
      boolean that_present_success = true && (that.success != null);
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.STRING) {
              this.success = iprot.readString();
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getInstanceId_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        if (this.success != null) {
          field.name = "success";
          field.type = TType.STRING;
          field.id = 0;
          oprot.writeFieldBegin(field);
          oprot.writeString(this.success);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getInstanceId_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getTables_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
    }

    public getTables_args() {
    }

    public getTables_args(
      cloudbase.core.security.thrift.AuthInfo credentials)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getTables_args)
        return this.equals((getTables_args)that);
      return false;
    }

    public boolean equals(getTables_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getTables_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getTables_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class getTables_result implements TBase, java.io.Serializable   {
    public Set<String> success;
    public cloudbase.core.security.thrift.ThriftSecurityException sec;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean success = false;
      public boolean sec = false;
    }

    public getTables_result() {
    }

    public getTables_result(
      Set<String> success,
      cloudbase.core.security.thrift.ThriftSecurityException sec)
    {
      this();
      this.success = success;
      this.__isset.success = true;
      this.sec = sec;
      this.__isset.sec = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof getTables_result)
        return this.equals((getTables_result)that);
      return false;
    }

    public boolean equals(getTables_result that) {
      if (that == null)
        return false;

      boolean this_present_success = true && (this.success != null);
      boolean that_present_success = true && (that.success != null);
      if (this_present_success || that_present_success) {
        if (!(this_present_success && that_present_success))
          return false;
        if (!this.success.equals(that.success))
          return false;
      }

      boolean this_present_sec = true && (this.sec != null);
      boolean that_present_sec = true && (that.sec != null);
      if (this_present_sec || that_present_sec) {
        if (!(this_present_sec && that_present_sec))
          return false;
        if (!this.sec.equals(that.sec))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 0:
            if (field.type == TType.SET) {
              {
                TSet _set32 = iprot.readSetBegin();
                this.success = new HashSet<String>(2*_set32.size);
                for (int _i33 = 0; _i33 < _set32.size; ++_i33)
                {
                  String _elem34;
                  _elem34 = iprot.readString();
                  this.success.add(_elem34);
                }
                iprot.readSetEnd();
              }
              this.__isset.success = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 1:
            if (field.type == TType.STRUCT) {
              this.sec = new cloudbase.core.security.thrift.ThriftSecurityException();
              this.sec.read(iprot);
              this.__isset.sec = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("getTables_result");
      oprot.writeStructBegin(struct);
      TField field = new TField();

      if (this.__isset.success) {
        if (this.success != null) {
          field.name = "success";
          field.type = TType.SET;
          field.id = 0;
          oprot.writeFieldBegin(field);
          {
            oprot.writeSetBegin(new TSet(TType.STRING, this.success.size()));
            for (String _iter35 : this.success)            {
              oprot.writeString(_iter35);
            }
            oprot.writeSetEnd();
          }
          oprot.writeFieldEnd();
        }
      } else if (this.__isset.sec) {
        if (this.sec != null) {
          field.name = "sec";
          field.type = TType.STRUCT;
          field.id = 1;
          oprot.writeFieldBegin(field);
          this.sec.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("getTables_result(");
      sb.append("success:");
      sb.append(this.success);
      sb.append(",sec:");
      sb.append(this.sec.toString());
      sb.append(")");
      return sb.toString();
    }

  }

}
