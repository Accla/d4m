/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.master.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class KeyExtentLocation implements TBase, java.io.Serializable {
  public cloudbase.core.data.KeyExtent extent;
  public byte[] location;

  public final Isset __isset = new Isset();
  public static final class Isset implements java.io.Serializable {
    public boolean extent = false;
    public boolean location = false;
  }

  public KeyExtentLocation() {
  }

  public KeyExtentLocation(
    cloudbase.core.data.KeyExtent extent,
    byte[] location)
  {
    this();
    this.extent = extent;
    this.__isset.extent = true;
    this.location = location;
    this.__isset.location = true;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof KeyExtentLocation)
      return this.equals((KeyExtentLocation)that);
    return false;
  }

  public boolean equals(KeyExtentLocation that) {
    if (that == null)
      return false;

    boolean this_present_extent = true && (this.extent != null);
    boolean that_present_extent = true && (that.extent != null);
    if (this_present_extent || that_present_extent) {
      if (!(this_present_extent && that_present_extent))
        return false;
      if (!this.extent.equals(that.extent))
        return false;
    }

    boolean this_present_location = true && (this.location != null);
    boolean that_present_location = true && (that.location != null);
    if (this_present_location || that_present_location) {
      if (!(this_present_location && that_present_location))
        return false;
      if (!java.util.Arrays.equals(this.location, that.location))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.STRUCT) {
            this.extent = new cloudbase.core.data.KeyExtent();
            this.extent.read(iprot);
            this.__isset.extent = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.STRING) {
            this.location = iprot.readBinary();
            this.__isset.location = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("KeyExtentLocation");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    if (this.extent != null) {
      field.name = "extent";
      field.type = TType.STRUCT;
      field.id = 1;
      oprot.writeFieldBegin(field);
      this.extent.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.location != null) {
      field.name = "location";
      field.type = TType.STRING;
      field.id = 2;
      oprot.writeFieldBegin(field);
      oprot.writeBinary(this.location);
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("KeyExtentLocation(");
    sb.append("extent:");
    sb.append(this.extent.toString());
    sb.append(",location:");
    sb.append(this.location);
    sb.append(")");
    return sb.toString();
  }

}

