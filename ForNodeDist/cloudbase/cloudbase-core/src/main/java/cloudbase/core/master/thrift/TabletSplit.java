/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.master.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class TabletSplit implements TBase, java.io.Serializable {
  public cloudbase.core.data.KeyExtent oldTablet;
  public List<KeyExtentLocation> keyExtentLocations;

  public final Isset __isset = new Isset();
  public static final class Isset implements java.io.Serializable {
    public boolean oldTablet = false;
    public boolean keyExtentLocations = false;
  }

  public TabletSplit() {
  }

  public TabletSplit(
    cloudbase.core.data.KeyExtent oldTablet,
    List<KeyExtentLocation> keyExtentLocations)
  {
    this();
    this.oldTablet = oldTablet;
    this.__isset.oldTablet = true;
    this.keyExtentLocations = keyExtentLocations;
    this.__isset.keyExtentLocations = true;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TabletSplit)
      return this.equals((TabletSplit)that);
    return false;
  }

  public boolean equals(TabletSplit that) {
    if (that == null)
      return false;

    boolean this_present_oldTablet = true && (this.oldTablet != null);
    boolean that_present_oldTablet = true && (that.oldTablet != null);
    if (this_present_oldTablet || that_present_oldTablet) {
      if (!(this_present_oldTablet && that_present_oldTablet))
        return false;
      if (!this.oldTablet.equals(that.oldTablet))
        return false;
    }

    boolean this_present_keyExtentLocations = true && (this.keyExtentLocations != null);
    boolean that_present_keyExtentLocations = true && (that.keyExtentLocations != null);
    if (this_present_keyExtentLocations || that_present_keyExtentLocations) {
      if (!(this_present_keyExtentLocations && that_present_keyExtentLocations))
        return false;
      if (!this.keyExtentLocations.equals(that.keyExtentLocations))
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.STRUCT) {
            this.oldTablet = new cloudbase.core.data.KeyExtent();
            this.oldTablet.read(iprot);
            this.__isset.oldTablet = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.LIST) {
            {
              TList _list4 = iprot.readListBegin();
              this.keyExtentLocations = new ArrayList<KeyExtentLocation>(_list4.size);
              for (int _i5 = 0; _i5 < _list4.size; ++_i5)
              {
                KeyExtentLocation _elem6 = new KeyExtentLocation();
                _elem6 = new KeyExtentLocation();
                _elem6.read(iprot);
                this.keyExtentLocations.add(_elem6);
              }
              iprot.readListEnd();
            }
            this.__isset.keyExtentLocations = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("TabletSplit");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    if (this.oldTablet != null) {
      field.name = "oldTablet";
      field.type = TType.STRUCT;
      field.id = 1;
      oprot.writeFieldBegin(field);
      this.oldTablet.write(oprot);
      oprot.writeFieldEnd();
    }
    if (this.keyExtentLocations != null) {
      field.name = "keyExtentLocations";
      field.type = TType.LIST;
      field.id = 2;
      oprot.writeFieldBegin(field);
      {
        oprot.writeListBegin(new TList(TType.STRUCT, this.keyExtentLocations.size()));
        for (KeyExtentLocation _iter7 : this.keyExtentLocations)        {
          _iter7.write(oprot);
        }
        oprot.writeListEnd();
      }
      oprot.writeFieldEnd();
    }
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("TabletSplit(");
    sb.append("oldTablet:");
    sb.append(this.oldTablet.toString());
    sb.append(",keyExtentLocations:");
    sb.append(this.keyExtentLocations);
    sb.append(")");
    return sb.toString();
  }

}

