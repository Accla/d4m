/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.monitor.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class TableInfo implements TBase, java.io.Serializable {
  public long recs;
  public long recsInMemory;
  public int tablets;
  public int onlineTablets;
  public double ingestRate;
  public double queryRate;

  public final Isset __isset = new Isset();
  public static final class Isset implements java.io.Serializable {
    public boolean recs = false;
    public boolean recsInMemory = false;
    public boolean tablets = false;
    public boolean onlineTablets = false;
    public boolean ingestRate = false;
    public boolean queryRate = false;
  }

  public TableInfo() {
  }

  public TableInfo(
    long recs,
    long recsInMemory,
    int tablets,
    int onlineTablets,
    double ingestRate,
    double queryRate)
  {
    this();
    this.recs = recs;
    this.__isset.recs = true;
    this.recsInMemory = recsInMemory;
    this.__isset.recsInMemory = true;
    this.tablets = tablets;
    this.__isset.tablets = true;
    this.onlineTablets = onlineTablets;
    this.__isset.onlineTablets = true;
    this.ingestRate = ingestRate;
    this.__isset.ingestRate = true;
    this.queryRate = queryRate;
    this.__isset.queryRate = true;
  }

  public boolean equals(Object that) {
    if (that == null)
      return false;
    if (that instanceof TableInfo)
      return this.equals((TableInfo)that);
    return false;
  }

  public boolean equals(TableInfo that) {
    if (that == null)
      return false;

    boolean this_present_recs = true;
    boolean that_present_recs = true;
    if (this_present_recs || that_present_recs) {
      if (!(this_present_recs && that_present_recs))
        return false;
      if (this.recs != that.recs)
        return false;
    }

    boolean this_present_recsInMemory = true;
    boolean that_present_recsInMemory = true;
    if (this_present_recsInMemory || that_present_recsInMemory) {
      if (!(this_present_recsInMemory && that_present_recsInMemory))
        return false;
      if (this.recsInMemory != that.recsInMemory)
        return false;
    }

    boolean this_present_tablets = true;
    boolean that_present_tablets = true;
    if (this_present_tablets || that_present_tablets) {
      if (!(this_present_tablets && that_present_tablets))
        return false;
      if (this.tablets != that.tablets)
        return false;
    }

    boolean this_present_onlineTablets = true;
    boolean that_present_onlineTablets = true;
    if (this_present_onlineTablets || that_present_onlineTablets) {
      if (!(this_present_onlineTablets && that_present_onlineTablets))
        return false;
      if (this.onlineTablets != that.onlineTablets)
        return false;
    }

    boolean this_present_ingestRate = true;
    boolean that_present_ingestRate = true;
    if (this_present_ingestRate || that_present_ingestRate) {
      if (!(this_present_ingestRate && that_present_ingestRate))
        return false;
      if (this.ingestRate != that.ingestRate)
        return false;
    }

    boolean this_present_queryRate = true;
    boolean that_present_queryRate = true;
    if (this_present_queryRate || that_present_queryRate) {
      if (!(this_present_queryRate && that_present_queryRate))
        return false;
      if (this.queryRate != that.queryRate)
        return false;
    }

    return true;
  }

  public int hashCode() {
    return 0;
  }

  public void read(TProtocol iprot) throws TException {
    TField field;
    iprot.readStructBegin();
    while (true)
    {
      field = iprot.readFieldBegin();
      if (field.type == TType.STOP) { 
        break;
      }
      switch (field.id)
      {
        case 1:
          if (field.type == TType.I64) {
            this.recs = iprot.readI64();
            this.__isset.recs = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 2:
          if (field.type == TType.I64) {
            this.recsInMemory = iprot.readI64();
            this.__isset.recsInMemory = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 3:
          if (field.type == TType.I32) {
            this.tablets = iprot.readI32();
            this.__isset.tablets = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 4:
          if (field.type == TType.I32) {
            this.onlineTablets = iprot.readI32();
            this.__isset.onlineTablets = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 5:
          if (field.type == TType.DOUBLE) {
            this.ingestRate = iprot.readDouble();
            this.__isset.ingestRate = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        case 6:
          if (field.type == TType.DOUBLE) {
            this.queryRate = iprot.readDouble();
            this.__isset.queryRate = true;
          } else { 
            TProtocolUtil.skip(iprot, field.type);
          }
          break;
        default:
          TProtocolUtil.skip(iprot, field.type);
          break;
      }
      iprot.readFieldEnd();
    }
    iprot.readStructEnd();
  }

  public void write(TProtocol oprot) throws TException {
    TStruct struct = new TStruct("TableInfo");
    oprot.writeStructBegin(struct);
    TField field = new TField();
    field.name = "recs";
    field.type = TType.I64;
    field.id = 1;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.recs);
    oprot.writeFieldEnd();
    field.name = "recsInMemory";
    field.type = TType.I64;
    field.id = 2;
    oprot.writeFieldBegin(field);
    oprot.writeI64(this.recsInMemory);
    oprot.writeFieldEnd();
    field.name = "tablets";
    field.type = TType.I32;
    field.id = 3;
    oprot.writeFieldBegin(field);
    oprot.writeI32(this.tablets);
    oprot.writeFieldEnd();
    field.name = "onlineTablets";
    field.type = TType.I32;
    field.id = 4;
    oprot.writeFieldBegin(field);
    oprot.writeI32(this.onlineTablets);
    oprot.writeFieldEnd();
    field.name = "ingestRate";
    field.type = TType.DOUBLE;
    field.id = 5;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.ingestRate);
    oprot.writeFieldEnd();
    field.name = "queryRate";
    field.type = TType.DOUBLE;
    field.id = 6;
    oprot.writeFieldBegin(field);
    oprot.writeDouble(this.queryRate);
    oprot.writeFieldEnd();
    oprot.writeFieldStop();
    oprot.writeStructEnd();
  }

  public String toString() {
    StringBuilder sb = new StringBuilder("TableInfo(");
    sb.append("recs:");
    sb.append(this.recs);
    sb.append(",recsInMemory:");
    sb.append(this.recsInMemory);
    sb.append(",tablets:");
    sb.append(this.tablets);
    sb.append(",onlineTablets:");
    sb.append(this.onlineTablets);
    sb.append(",ingestRate:");
    sb.append(this.ingestRate);
    sb.append(",queryRate:");
    sb.append(this.queryRate);
    sb.append(")");
    return sb.toString();
  }

}

