/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
package cloudbase.core.master.thrift;

import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
import java.util.Set;
import java.util.HashSet;
import com.facebook.thrift.*;

import com.facebook.thrift.protocol.*;
import com.facebook.thrift.transport.*;

public class MasterTabletService {

  public interface Iface {

    public void reportTabletStatus(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, cloudbase.core.data.KeyExtent extent, int status) throws TException;

    public void reportTabletUnloaded(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent) throws TException;

    public void reportTabletList(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, List<cloudbase.core.data.KeyExtent> extents, String clientServiceLocation, String monitorServiceLocation, long tabletServerTime) throws TException;

    public void reportSplitExtent(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletSplit split) throws TException;

    public void pong(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletServerStatus status) throws TException;

    public void reportShutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException;

  }

  public static class Client implements Iface {
    public Client(TProtocol prot)
    {
      this(prot, prot);
    }

    public Client(TProtocol iprot, TProtocol oprot)
    {
      iprot_ = iprot;
      oprot_ = oprot;
    }

    protected TProtocol iprot_;
    protected TProtocol oprot_;

    protected int seqid_;

    public TProtocol getInputProtocol()
    {
      return this.iprot_;
    }

    public TProtocol getOutputProtocol()
    {
      return this.oprot_;
    }

    public void reportTabletStatus(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, cloudbase.core.data.KeyExtent extent, int status) throws TException
    {
      send_reportTabletStatus(credentials, serverName, extent, status);
      recv_reportTabletStatus();
    }

    public void send_reportTabletStatus(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, cloudbase.core.data.KeyExtent extent, int status) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("reportTabletStatus", TMessageType.CALL, seqid_));
      reportTabletStatus_args args = new reportTabletStatus_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.extent = extent;
      args.status = status;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_reportTabletStatus() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      reportTabletStatus_result result = new reportTabletStatus_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

    public void reportTabletUnloaded(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent) throws TException
    {
      send_reportTabletUnloaded(credentials, extent);
      recv_reportTabletUnloaded();
    }

    public void send_reportTabletUnloaded(cloudbase.core.security.thrift.AuthInfo credentials, cloudbase.core.data.KeyExtent extent) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("reportTabletUnloaded", TMessageType.CALL, seqid_));
      reportTabletUnloaded_args args = new reportTabletUnloaded_args();
      args.credentials = credentials;
      args.extent = extent;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_reportTabletUnloaded() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      reportTabletUnloaded_result result = new reportTabletUnloaded_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

    public void reportTabletList(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, List<cloudbase.core.data.KeyExtent> extents, String clientServiceLocation, String monitorServiceLocation, long tabletServerTime) throws TException
    {
      send_reportTabletList(credentials, serverName, extents, clientServiceLocation, monitorServiceLocation, tabletServerTime);
      recv_reportTabletList();
    }

    public void send_reportTabletList(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, List<cloudbase.core.data.KeyExtent> extents, String clientServiceLocation, String monitorServiceLocation, long tabletServerTime) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("reportTabletList", TMessageType.CALL, seqid_));
      reportTabletList_args args = new reportTabletList_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.extents = extents;
      args.clientServiceLocation = clientServiceLocation;
      args.monitorServiceLocation = monitorServiceLocation;
      args.tabletServerTime = tabletServerTime;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_reportTabletList() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      reportTabletList_result result = new reportTabletList_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

    public void reportSplitExtent(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletSplit split) throws TException
    {
      send_reportSplitExtent(credentials, serverName, split);
      recv_reportSplitExtent();
    }

    public void send_reportSplitExtent(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletSplit split) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("reportSplitExtent", TMessageType.CALL, seqid_));
      reportSplitExtent_args args = new reportSplitExtent_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.split = split;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_reportSplitExtent() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      reportSplitExtent_result result = new reportSplitExtent_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

    public void pong(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletServerStatus status) throws TException
    {
      send_pong(credentials, serverName, status);
      recv_pong();
    }

    public void send_pong(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, TabletServerStatus status) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("pong", TMessageType.CALL, seqid_));
      pong_args args = new pong_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.status = status;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_pong() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      pong_result result = new pong_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

    public void reportShutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException
    {
      send_reportShutdown(credentials, serverName, stage);
      recv_reportShutdown();
    }

    public void send_reportShutdown(cloudbase.core.security.thrift.AuthInfo credentials, String serverName, int stage) throws TException
    {
      oprot_.writeMessageBegin(new TMessage("reportShutdown", TMessageType.CALL, seqid_));
      reportShutdown_args args = new reportShutdown_args();
      args.credentials = credentials;
      args.serverName = serverName;
      args.stage = stage;
      args.write(oprot_);
      oprot_.writeMessageEnd();
      oprot_.getTransport().flush();
    }

    public void recv_reportShutdown() throws TException
    {
      TMessage msg = iprot_.readMessageBegin();
      if (msg.type == TMessageType.EXCEPTION) {
        TApplicationException x = TApplicationException.read(iprot_);
        iprot_.readMessageEnd();
        throw x;
      }
      reportShutdown_result result = new reportShutdown_result();
      result.read(iprot_);
      iprot_.readMessageEnd();
      return;
    }

  }
  public static class Processor implements TProcessor {
    public Processor(Iface iface)
    {
      iface_ = iface;
      processMap_.put("reportTabletStatus", new reportTabletStatus());
      processMap_.put("reportTabletUnloaded", new reportTabletUnloaded());
      processMap_.put("reportTabletList", new reportTabletList());
      processMap_.put("reportSplitExtent", new reportSplitExtent());
      processMap_.put("pong", new pong());
      processMap_.put("reportShutdown", new reportShutdown());
    }

    protected static interface ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException;
    }

    private Iface iface_;
    protected final HashMap<String,ProcessFunction> processMap_ = new HashMap<String,ProcessFunction>();

    public boolean process(TProtocol iprot, TProtocol oprot) throws TException
    {
      TMessage msg = iprot.readMessageBegin();
      ProcessFunction fn = processMap_.get(msg.name);
      if (fn == null) {
        TProtocolUtil.skip(iprot, TType.STRUCT);
        iprot.readMessageEnd();
        TApplicationException x = new TApplicationException(TApplicationException.UNKNOWN_METHOD, "Invalid method name: '"+msg.name+"'");
        oprot.writeMessageBegin(new TMessage(msg.name, TMessageType.EXCEPTION, msg.seqid));
        x.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
        return true;
      }
      fn.process(msg.seqid, iprot, oprot);
      return true;
    }

    private class reportTabletStatus implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        reportTabletStatus_args args = new reportTabletStatus_args();
        args.read(iprot);
        iprot.readMessageEnd();
        reportTabletStatus_result result = new reportTabletStatus_result();
        iface_.reportTabletStatus(args.credentials, args.serverName, args.extent, args.status);
        oprot.writeMessageBegin(new TMessage("reportTabletStatus", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class reportTabletUnloaded implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        reportTabletUnloaded_args args = new reportTabletUnloaded_args();
        args.read(iprot);
        iprot.readMessageEnd();
        reportTabletUnloaded_result result = new reportTabletUnloaded_result();
        iface_.reportTabletUnloaded(args.credentials, args.extent);
        oprot.writeMessageBegin(new TMessage("reportTabletUnloaded", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class reportTabletList implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        reportTabletList_args args = new reportTabletList_args();
        args.read(iprot);
        iprot.readMessageEnd();
        reportTabletList_result result = new reportTabletList_result();
        iface_.reportTabletList(args.credentials, args.serverName, args.extents, args.clientServiceLocation, args.monitorServiceLocation, args.tabletServerTime);
        oprot.writeMessageBegin(new TMessage("reportTabletList", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class reportSplitExtent implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        reportSplitExtent_args args = new reportSplitExtent_args();
        args.read(iprot);
        iprot.readMessageEnd();
        reportSplitExtent_result result = new reportSplitExtent_result();
        iface_.reportSplitExtent(args.credentials, args.serverName, args.split);
        oprot.writeMessageBegin(new TMessage("reportSplitExtent", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class pong implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        pong_args args = new pong_args();
        args.read(iprot);
        iprot.readMessageEnd();
        pong_result result = new pong_result();
        iface_.pong(args.credentials, args.serverName, args.status);
        oprot.writeMessageBegin(new TMessage("pong", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

    private class reportShutdown implements ProcessFunction {
      public void process(int seqid, TProtocol iprot, TProtocol oprot) throws TException
      {
        reportShutdown_args args = new reportShutdown_args();
        args.read(iprot);
        iprot.readMessageEnd();
        reportShutdown_result result = new reportShutdown_result();
        iface_.reportShutdown(args.credentials, args.serverName, args.stage);
        oprot.writeMessageBegin(new TMessage("reportShutdown", TMessageType.REPLY, seqid));
        result.write(oprot);
        oprot.writeMessageEnd();
        oprot.getTransport().flush();
      }

    }

  }

  public static class reportTabletStatus_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public cloudbase.core.data.KeyExtent extent;
    public int status;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean extent = false;
      public boolean status = false;
    }

    public reportTabletStatus_args() {
    }

    public reportTabletStatus_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      cloudbase.core.data.KeyExtent extent,
      int status)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.extent = extent;
      this.__isset.extent = true;
      this.status = status;
      this.__isset.status = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletStatus_args)
        return this.equals((reportTabletStatus_args)that);
      return false;
    }

    public boolean equals(reportTabletStatus_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_extent = true && (this.extent != null);
      boolean that_present_extent = true && (that.extent != null);
      if (this_present_extent || that_present_extent) {
        if (!(this_present_extent && that_present_extent))
          return false;
        if (!this.extent.equals(that.extent))
          return false;
      }

      boolean this_present_status = true;
      boolean that_present_status = true;
      if (this_present_status || that_present_status) {
        if (!(this_present_status && that_present_status))
          return false;
        if (this.status != that.status)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRUCT) {
              this.extent = new cloudbase.core.data.KeyExtent();
              this.extent.read(iprot);
              this.__isset.extent = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.I32) {
              this.status = iprot.readI32();
              this.__isset.status = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletStatus_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      if (this.extent != null) {
        field.name = "extent";
        field.type = TType.STRUCT;
        field.id = 3;
        oprot.writeFieldBegin(field);
        this.extent.write(oprot);
        oprot.writeFieldEnd();
      }
      field.name = "status";
      field.type = TType.I32;
      field.id = 4;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.status);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletStatus_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",extent:");
      sb.append(this.extent.toString());
      sb.append(",status:");
      sb.append(this.status);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportTabletStatus_result implements TBase, java.io.Serializable   {
    public reportTabletStatus_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletStatus_result)
        return this.equals((reportTabletStatus_result)that);
      return false;
    }

    public boolean equals(reportTabletStatus_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletStatus_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletStatus_result(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportTabletUnloaded_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public cloudbase.core.data.KeyExtent extent;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean extent = false;
    }

    public reportTabletUnloaded_args() {
    }

    public reportTabletUnloaded_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      cloudbase.core.data.KeyExtent extent)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.extent = extent;
      this.__isset.extent = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletUnloaded_args)
        return this.equals((reportTabletUnloaded_args)that);
      return false;
    }

    public boolean equals(reportTabletUnloaded_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_extent = true && (this.extent != null);
      boolean that_present_extent = true && (that.extent != null);
      if (this_present_extent || that_present_extent) {
        if (!(this_present_extent && that_present_extent))
          return false;
        if (!this.extent.equals(that.extent))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRUCT) {
              this.extent = new cloudbase.core.data.KeyExtent();
              this.extent.read(iprot);
              this.__isset.extent = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletUnloaded_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.extent != null) {
        field.name = "extent";
        field.type = TType.STRUCT;
        field.id = 2;
        oprot.writeFieldBegin(field);
        this.extent.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletUnloaded_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",extent:");
      sb.append(this.extent.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportTabletUnloaded_result implements TBase, java.io.Serializable   {
    public reportTabletUnloaded_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletUnloaded_result)
        return this.equals((reportTabletUnloaded_result)that);
      return false;
    }

    public boolean equals(reportTabletUnloaded_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletUnloaded_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletUnloaded_result(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportTabletList_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public List<cloudbase.core.data.KeyExtent> extents;
    public String clientServiceLocation;
    public String monitorServiceLocation;
    public long tabletServerTime;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean extents = false;
      public boolean clientServiceLocation = false;
      public boolean monitorServiceLocation = false;
      public boolean tabletServerTime = false;
    }

    public reportTabletList_args() {
    }

    public reportTabletList_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      List<cloudbase.core.data.KeyExtent> extents,
      String clientServiceLocation,
      String monitorServiceLocation,
      long tabletServerTime)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.extents = extents;
      this.__isset.extents = true;
      this.clientServiceLocation = clientServiceLocation;
      this.__isset.clientServiceLocation = true;
      this.monitorServiceLocation = monitorServiceLocation;
      this.__isset.monitorServiceLocation = true;
      this.tabletServerTime = tabletServerTime;
      this.__isset.tabletServerTime = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletList_args)
        return this.equals((reportTabletList_args)that);
      return false;
    }

    public boolean equals(reportTabletList_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_extents = true && (this.extents != null);
      boolean that_present_extents = true && (that.extents != null);
      if (this_present_extents || that_present_extents) {
        if (!(this_present_extents && that_present_extents))
          return false;
        if (!this.extents.equals(that.extents))
          return false;
      }

      boolean this_present_clientServiceLocation = true && (this.clientServiceLocation != null);
      boolean that_present_clientServiceLocation = true && (that.clientServiceLocation != null);
      if (this_present_clientServiceLocation || that_present_clientServiceLocation) {
        if (!(this_present_clientServiceLocation && that_present_clientServiceLocation))
          return false;
        if (!this.clientServiceLocation.equals(that.clientServiceLocation))
          return false;
      }

      boolean this_present_monitorServiceLocation = true && (this.monitorServiceLocation != null);
      boolean that_present_monitorServiceLocation = true && (that.monitorServiceLocation != null);
      if (this_present_monitorServiceLocation || that_present_monitorServiceLocation) {
        if (!(this_present_monitorServiceLocation && that_present_monitorServiceLocation))
          return false;
        if (!this.monitorServiceLocation.equals(that.monitorServiceLocation))
          return false;
      }

      boolean this_present_tabletServerTime = true;
      boolean that_present_tabletServerTime = true;
      if (this_present_tabletServerTime || that_present_tabletServerTime) {
        if (!(this_present_tabletServerTime && that_present_tabletServerTime))
          return false;
        if (this.tabletServerTime != that.tabletServerTime)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.LIST) {
              {
                TList _list8 = iprot.readListBegin();
                this.extents = new ArrayList<cloudbase.core.data.KeyExtent>(_list8.size);
                for (int _i9 = 0; _i9 < _list8.size; ++_i9)
                {
                  cloudbase.core.data.KeyExtent _elem10 = new cloudbase.core.data.KeyExtent();
                  _elem10 = new cloudbase.core.data.KeyExtent();
                  _elem10.read(iprot);
                  this.extents.add(_elem10);
                }
                iprot.readListEnd();
              }
              this.__isset.extents = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 4:
            if (field.type == TType.STRING) {
              this.clientServiceLocation = iprot.readString();
              this.__isset.clientServiceLocation = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 5:
            if (field.type == TType.STRING) {
              this.monitorServiceLocation = iprot.readString();
              this.__isset.monitorServiceLocation = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 6:
            if (field.type == TType.I64) {
              this.tabletServerTime = iprot.readI64();
              this.__isset.tabletServerTime = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletList_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      if (this.extents != null) {
        field.name = "extents";
        field.type = TType.LIST;
        field.id = 3;
        oprot.writeFieldBegin(field);
        {
          oprot.writeListBegin(new TList(TType.STRUCT, this.extents.size()));
          for (cloudbase.core.data.KeyExtent _iter11 : this.extents)          {
            _iter11.write(oprot);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (this.clientServiceLocation != null) {
        field.name = "clientServiceLocation";
        field.type = TType.STRING;
        field.id = 4;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.clientServiceLocation);
        oprot.writeFieldEnd();
      }
      if (this.monitorServiceLocation != null) {
        field.name = "monitorServiceLocation";
        field.type = TType.STRING;
        field.id = 5;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.monitorServiceLocation);
        oprot.writeFieldEnd();
      }
      field.name = "tabletServerTime";
      field.type = TType.I64;
      field.id = 6;
      oprot.writeFieldBegin(field);
      oprot.writeI64(this.tabletServerTime);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletList_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",extents:");
      sb.append(this.extents);
      sb.append(",clientServiceLocation:");
      sb.append(this.clientServiceLocation);
      sb.append(",monitorServiceLocation:");
      sb.append(this.monitorServiceLocation);
      sb.append(",tabletServerTime:");
      sb.append(this.tabletServerTime);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportTabletList_result implements TBase, java.io.Serializable   {
    public reportTabletList_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportTabletList_result)
        return this.equals((reportTabletList_result)that);
      return false;
    }

    public boolean equals(reportTabletList_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportTabletList_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportTabletList_result(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportSplitExtent_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public TabletSplit split;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean split = false;
    }

    public reportSplitExtent_args() {
    }

    public reportSplitExtent_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      TabletSplit split)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.split = split;
      this.__isset.split = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportSplitExtent_args)
        return this.equals((reportSplitExtent_args)that);
      return false;
    }

    public boolean equals(reportSplitExtent_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_split = true && (this.split != null);
      boolean that_present_split = true && (that.split != null);
      if (this_present_split || that_present_split) {
        if (!(this_present_split && that_present_split))
          return false;
        if (!this.split.equals(that.split))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRUCT) {
              this.split = new TabletSplit();
              this.split.read(iprot);
              this.__isset.split = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportSplitExtent_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      if (this.split != null) {
        field.name = "split";
        field.type = TType.STRUCT;
        field.id = 3;
        oprot.writeFieldBegin(field);
        this.split.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportSplitExtent_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",split:");
      sb.append(this.split.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportSplitExtent_result implements TBase, java.io.Serializable   {
    public reportSplitExtent_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportSplitExtent_result)
        return this.equals((reportSplitExtent_result)that);
      return false;
    }

    public boolean equals(reportSplitExtent_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportSplitExtent_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportSplitExtent_result(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class pong_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public TabletServerStatus status;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean status = false;
    }

    public pong_args() {
    }

    public pong_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      TabletServerStatus status)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.status = status;
      this.__isset.status = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof pong_args)
        return this.equals((pong_args)that);
      return false;
    }

    public boolean equals(pong_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_status = true && (this.status != null);
      boolean that_present_status = true && (that.status != null);
      if (this_present_status || that_present_status) {
        if (!(this_present_status && that_present_status))
          return false;
        if (!this.status.equals(that.status))
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.STRUCT) {
              this.status = new TabletServerStatus();
              this.status.read(iprot);
              this.__isset.status = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("pong_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      if (this.status != null) {
        field.name = "status";
        field.type = TType.STRUCT;
        field.id = 3;
        oprot.writeFieldBegin(field);
        this.status.write(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("pong_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",status:");
      sb.append(this.status.toString());
      sb.append(")");
      return sb.toString();
    }

  }

  public static class pong_result implements TBase, java.io.Serializable   {
    public pong_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof pong_result)
        return this.equals((pong_result)that);
      return false;
    }

    public boolean equals(pong_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("pong_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("pong_result(");
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportShutdown_args implements TBase, java.io.Serializable   {
    public cloudbase.core.security.thrift.AuthInfo credentials;
    public String serverName;
    public int stage;

    public final Isset __isset = new Isset();
    public static final class Isset implements java.io.Serializable {
      public boolean credentials = false;
      public boolean serverName = false;
      public boolean stage = false;
    }

    public reportShutdown_args() {
    }

    public reportShutdown_args(
      cloudbase.core.security.thrift.AuthInfo credentials,
      String serverName,
      int stage)
    {
      this();
      this.credentials = credentials;
      this.__isset.credentials = true;
      this.serverName = serverName;
      this.__isset.serverName = true;
      this.stage = stage;
      this.__isset.stage = true;
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportShutdown_args)
        return this.equals((reportShutdown_args)that);
      return false;
    }

    public boolean equals(reportShutdown_args that) {
      if (that == null)
        return false;

      boolean this_present_credentials = true && (this.credentials != null);
      boolean that_present_credentials = true && (that.credentials != null);
      if (this_present_credentials || that_present_credentials) {
        if (!(this_present_credentials && that_present_credentials))
          return false;
        if (!this.credentials.equals(that.credentials))
          return false;
      }

      boolean this_present_serverName = true && (this.serverName != null);
      boolean that_present_serverName = true && (that.serverName != null);
      if (this_present_serverName || that_present_serverName) {
        if (!(this_present_serverName && that_present_serverName))
          return false;
        if (!this.serverName.equals(that.serverName))
          return false;
      }

      boolean this_present_stage = true;
      boolean that_present_stage = true;
      if (this_present_stage || that_present_stage) {
        if (!(this_present_stage && that_present_stage))
          return false;
        if (this.stage != that.stage)
          return false;
      }

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          case 1:
            if (field.type == TType.STRUCT) {
              this.credentials = new cloudbase.core.security.thrift.AuthInfo();
              this.credentials.read(iprot);
              this.__isset.credentials = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 2:
            if (field.type == TType.STRING) {
              this.serverName = iprot.readString();
              this.__isset.serverName = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          case 3:
            if (field.type == TType.I32) {
              this.stage = iprot.readI32();
              this.__isset.stage = true;
            } else { 
              TProtocolUtil.skip(iprot, field.type);
            }
            break;
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportShutdown_args");
      oprot.writeStructBegin(struct);
      TField field = new TField();
      if (this.credentials != null) {
        field.name = "credentials";
        field.type = TType.STRUCT;
        field.id = 1;
        oprot.writeFieldBegin(field);
        this.credentials.write(oprot);
        oprot.writeFieldEnd();
      }
      if (this.serverName != null) {
        field.name = "serverName";
        field.type = TType.STRING;
        field.id = 2;
        oprot.writeFieldBegin(field);
        oprot.writeString(this.serverName);
        oprot.writeFieldEnd();
      }
      field.name = "stage";
      field.type = TType.I32;
      field.id = 3;
      oprot.writeFieldBegin(field);
      oprot.writeI32(this.stage);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportShutdown_args(");
      sb.append("credentials:");
      sb.append(this.credentials.toString());
      sb.append(",serverName:");
      sb.append(this.serverName);
      sb.append(",stage:");
      sb.append(this.stage);
      sb.append(")");
      return sb.toString();
    }

  }

  public static class reportShutdown_result implements TBase, java.io.Serializable   {
    public reportShutdown_result() {
    }

    public boolean equals(Object that) {
      if (that == null)
        return false;
      if (that instanceof reportShutdown_result)
        return this.equals((reportShutdown_result)that);
      return false;
    }

    public boolean equals(reportShutdown_result that) {
      if (that == null)
        return false;

      return true;
    }

    public int hashCode() {
      return 0;
    }

    public void read(TProtocol iprot) throws TException {
      TField field;
      iprot.readStructBegin();
      while (true)
      {
        field = iprot.readFieldBegin();
        if (field.type == TType.STOP) { 
          break;
        }
        switch (field.id)
        {
          default:
            TProtocolUtil.skip(iprot, field.type);
            break;
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();
    }

    public void write(TProtocol oprot) throws TException {
      TStruct struct = new TStruct("reportShutdown_result");
      oprot.writeStructBegin(struct);

      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    public String toString() {
      StringBuilder sb = new StringBuilder("reportShutdown_result(");
      sb.append(")");
      return sb.toString();
    }

  }

}
