#!/usr/bin/env python
#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

import sys
import pprint
from urlparse import urlparse
from thrift.transport import TTransport
from thrift.transport import TSocket
from thrift.transport import THttpClient
from thrift.protocol import TBinaryProtocol

import MasterClientService
from ttypes import *

if len(sys.argv) <= 1 or sys.argv[1] == '--help':
  print ''
  print 'Usage: ' + sys.argv[0] + ' [-h host:port] [-u url] [-f[ramed]] function [arg1 [arg2...]]'
  print ''
  print 'Functions:'
  print '  void createTable(AuthInfo credentials, string table,  splitPoints)'
  print '  void deleteTable(AuthInfo credentials, string table)'
  print '  void shutdown(AuthInfo credentials, bool stopTabletServers)'
  print '  void ping(AuthInfo credentials)'
  print '  void flush(AuthInfo credentials, string table)'
  print '  bool setTableProperty(AuthInfo credentials, string table, string property, string value)'
  print '  bool removeTableProperty(AuthInfo credentials, string table, string property)'
  print '  bool authenticateUser(AuthInfo credentials, string user, string password)'
  print '   listUsers(AuthInfo credentials)'
  print '  void createUser(AuthInfo credentials, string user, string password,  authorizations)'
  print '  void dropUser(AuthInfo credentials, string user)'
  print '  void changePassword(AuthInfo credentials, string user, string password)'
  print '  void changeAuthorizations(AuthInfo credentials, string user,  authorizations)'
  print '   getUserAuthorizations(AuthInfo credentials, string user)'
  print '  bool hasSystemPermission(AuthInfo credentials, string user, i32 sysPerm)'
  print '  bool hasTablePermission(AuthInfo credentials, string user, string table, i32 tblPerm)'
  print '  void grantSystemPermission(AuthInfo credentials, string user, i32 permission)'
  print '  void revokeSystemPermission(AuthInfo credentials, string user, i32 permission)'
  print '  void grantTablePermission(AuthInfo credentials, string user, string table, i32 permission)'
  print '  void revokeTablePermission(AuthInfo credentials, string user, string table, i32 permission)'
  print '  string getRootTabletLocation()'
  print '  string getInstanceId()'
  print '   getTables(AuthInfo credentials)'
  print ''
  sys.exit(0)

pp = pprint.PrettyPrinter(indent = 2)
host = 'localhost'
port = 9090
uri = ''
framed = False
http = False
argi = 1

if sys.argv[argi] == '-h':
  parts = sys.argv[argi+1].split(':') 
  host = parts[0]
  port = int(parts[1])
  argi += 2

if sys.argv[argi] == '-u':
  url = urlparse(sys.argv[argi+1])
  parts = url[1].split(':') 
  host = parts[0]
  if len(parts) > 1:
    port = int(parts[1])
  else:
    port = 80
  uri = url[2]
  http = True
  argi += 2

if sys.argv[argi] == '-f' or sys.argv[argi] == '-framed':
  framed = True
  argi += 1

cmd = sys.argv[argi]
args = sys.argv[argi+1:]

if http:
  transport = THttpClient.THttpClient(host, port, uri)
else:
  socket = TSocket.TSocket(host, port)
  if framed:
    transport = TTransport.TFramedTransport(socket)
  else:
    transport = TTransport.TBufferedTransport(socket)
protocol = TBinaryProtocol.TBinaryProtocol(transport)
client = MasterClientService.Client(protocol)
transport.open()

if cmd == 'createTable':
  if len(args) != 3:
    print 'createTable requires 3 args'
    sys.exit(1)
  pp.pprint(client.createTable(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'deleteTable':
  if len(args) != 2:
    print 'deleteTable requires 2 args'
    sys.exit(1)
  pp.pprint(client.deleteTable(eval(args[0]),args[1],))

elif cmd == 'shutdown':
  if len(args) != 2:
    print 'shutdown requires 2 args'
    sys.exit(1)
  pp.pprint(client.shutdown(eval(args[0]),eval(args[1]),))

elif cmd == 'ping':
  if len(args) != 1:
    print 'ping requires 1 args'
    sys.exit(1)
  pp.pprint(client.ping(eval(args[0]),))

elif cmd == 'flush':
  if len(args) != 2:
    print 'flush requires 2 args'
    sys.exit(1)
  pp.pprint(client.flush(eval(args[0]),args[1],))

elif cmd == 'setTableProperty':
  if len(args) != 4:
    print 'setTableProperty requires 4 args'
    sys.exit(1)
  pp.pprint(client.setTableProperty(eval(args[0]),args[1],args[2],args[3],))

elif cmd == 'removeTableProperty':
  if len(args) != 3:
    print 'removeTableProperty requires 3 args'
    sys.exit(1)
  pp.pprint(client.removeTableProperty(eval(args[0]),args[1],args[2],))

elif cmd == 'authenticateUser':
  if len(args) != 3:
    print 'authenticateUser requires 3 args'
    sys.exit(1)
  pp.pprint(client.authenticateUser(eval(args[0]),args[1],args[2],))

elif cmd == 'listUsers':
  if len(args) != 1:
    print 'listUsers requires 1 args'
    sys.exit(1)
  pp.pprint(client.listUsers(eval(args[0]),))

elif cmd == 'createUser':
  if len(args) != 4:
    print 'createUser requires 4 args'
    sys.exit(1)
  pp.pprint(client.createUser(eval(args[0]),args[1],args[2],eval(args[3]),))

elif cmd == 'dropUser':
  if len(args) != 2:
    print 'dropUser requires 2 args'
    sys.exit(1)
  pp.pprint(client.dropUser(eval(args[0]),args[1],))

elif cmd == 'changePassword':
  if len(args) != 3:
    print 'changePassword requires 3 args'
    sys.exit(1)
  pp.pprint(client.changePassword(eval(args[0]),args[1],args[2],))

elif cmd == 'changeAuthorizations':
  if len(args) != 3:
    print 'changeAuthorizations requires 3 args'
    sys.exit(1)
  pp.pprint(client.changeAuthorizations(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'getUserAuthorizations':
  if len(args) != 2:
    print 'getUserAuthorizations requires 2 args'
    sys.exit(1)
  pp.pprint(client.getUserAuthorizations(eval(args[0]),args[1],))

elif cmd == 'hasSystemPermission':
  if len(args) != 3:
    print 'hasSystemPermission requires 3 args'
    sys.exit(1)
  pp.pprint(client.hasSystemPermission(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'hasTablePermission':
  if len(args) != 4:
    print 'hasTablePermission requires 4 args'
    sys.exit(1)
  pp.pprint(client.hasTablePermission(eval(args[0]),args[1],args[2],eval(args[3]),))

elif cmd == 'grantSystemPermission':
  if len(args) != 3:
    print 'grantSystemPermission requires 3 args'
    sys.exit(1)
  pp.pprint(client.grantSystemPermission(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'revokeSystemPermission':
  if len(args) != 3:
    print 'revokeSystemPermission requires 3 args'
    sys.exit(1)
  pp.pprint(client.revokeSystemPermission(eval(args[0]),args[1],eval(args[2]),))

elif cmd == 'grantTablePermission':
  if len(args) != 4:
    print 'grantTablePermission requires 4 args'
    sys.exit(1)
  pp.pprint(client.grantTablePermission(eval(args[0]),args[1],args[2],eval(args[3]),))

elif cmd == 'revokeTablePermission':
  if len(args) != 4:
    print 'revokeTablePermission requires 4 args'
    sys.exit(1)
  pp.pprint(client.revokeTablePermission(eval(args[0]),args[1],args[2],eval(args[3]),))

elif cmd == 'getRootTabletLocation':
  if len(args) != 0:
    print 'getRootTabletLocation requires 0 args'
    sys.exit(1)
  pp.pprint(client.getRootTabletLocation())

elif cmd == 'getInstanceId':
  if len(args) != 0:
    print 'getInstanceId requires 0 args'
    sys.exit(1)
  pp.pprint(client.getInstanceId())

elif cmd == 'getTables':
  if len(args) != 1:
    print 'getTables requires 1 args'
    sys.exit(1)
  pp.pprint(client.getTables(eval(args[0]),))

transport.close()
