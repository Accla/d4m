**********************************************

1. Running the Benchmarks

Syntax for running run.py:
./run.py [-l -v <log_level> -s <run_speed> -u <user> -p <password> -i <instance>] [Benchmark1 ... BenchmarkN]

Specifying a specific benchmark or set of benchmarks runs only those, while 
not specifying any runs all benchmarks.
-l Lists the benchmarks that will be run
-v <run_speed> can either be slow, medium or fast
-s <log_level> is an int representing the verbosity of the debugging output
-u <user> user to use when connecting with cloudbase.  If not set you will be prompted to input it.
-p <password> password to use when connecting with cloudbase.  If not set you will be prompted to input it.
-i <instance> instance to use when connecting with cloudbase.  If not set you will be prompted to input it.

**********************************************

2. The Benchmarks

Values in a 3-tuple are the slow,medium,fast speeds at which you can run the benchmarks. 

CloudStone1: Test the speed at which we can check that cloudbase is up and we
             can reach all the slaves. Lower is better.
CloudStone2: Ingest 10000,100000,1000000 rows of values 50 bytes on every slave.  Higher is better.
CloudStone3: Ingest 1000,5000,10000 rows of values 1024,8192,65535 bytes on every slave.  Higher is better.
CloudStone4 (TeraSort): Ingests 10000,10000000,10000000000 rows. Lower score is better.
CloudStone5: Creates 100,500,1000 tables named TestTableX and then deletes them. Lower is better.
CloudStone6: Creates a table with 400, 800, 1000 splits.  Lower is better

**********************************************

3. Terasort

The 4th Benchmark is Terasort.  Run the benchmarks with speed 'slow' to do a full terasort.

**********************************************

4. Misc

These benchmarks create tables in cloudbase named 'test_ingest' and 'CloudIngestTest'.  These tables are *NOT* deleted
at the end of the benchmarks.
