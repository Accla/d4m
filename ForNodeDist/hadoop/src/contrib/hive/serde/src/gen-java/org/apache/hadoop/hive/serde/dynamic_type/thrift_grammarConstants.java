/**
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Generated By:JJTree&JavaCC: Do not edit this line. thrift_grammarConstants.java */
package org.apache.hadoop.hive.serde.dynamic_type;

public interface thrift_grammarConstants {

  int EOF = 0;
  int tok_const = 8;
  int tok_namespace = 9;
  int tok_cpp_namespace = 10;
  int tok_cpp_include = 11;
  int tok_cpp_type = 12;
  int tok_java_package = 13;
  int tok_cocoa_prefix = 14;
  int tok_csharp_namespace = 15;
  int tok_php_namespace = 16;
  int tok_py_module = 17;
  int tok_perl_package = 18;
  int tok_ruby_namespace = 19;
  int tok_smalltalk_category = 20;
  int tok_smalltalk_prefix = 21;
  int tok_xsd_all = 22;
  int tok_xsd_optional = 23;
  int tok_xsd_nillable = 24;
  int tok_xsd_namespace = 25;
  int tok_xsd_attrs = 26;
  int tok_include = 27;
  int tok_void = 28;
  int tok_bool = 29;
  int tok_byte = 30;
  int tok_i16 = 31;
  int tok_i32 = 32;
  int tok_i64 = 33;
  int tok_double = 34;
  int tok_string = 35;
  int tok_slist = 36;
  int tok_senum = 37;
  int tok_map = 38;
  int tok_list = 39;
  int tok_set = 40;
  int tok_async = 41;
  int tok_typedef = 42;
  int tok_struct = 43;
  int tok_exception = 44;
  int tok_extends = 45;
  int tok_throws = 46;
  int tok_service = 47;
  int tok_enum = 48;
  int tok_required = 49;
  int tok_optional = 50;
  int tok_int_constant = 51;
  int tok_double_constant = 52;
  int IDENTIFIER = 53;
  int LETTER = 54;
  int DIGIT = 55;
  int tok_literal = 56;
  int tok_st_identifier = 57;

  int DEFAULT = 0;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<token of kind 5>",
    "<token of kind 6>",
    "<token of kind 7>",
    "\"const\"",
    "\"namespace\"",
    "\"cpp_namespace\"",
    "\"cpp_include\"",
    "\"cpp_type\"",
    "\"java_package\"",
    "\"cocoa_prefix\"",
    "\"csharp_namespace\"",
    "\"php_namespace\"",
    "\"py_module\"",
    "\"perl_package\"",
    "\"ruby_namespace\"",
    "\"smalltalk_category\"",
    "\"smalltalk_prefix\"",
    "\"xsd_all\"",
    "\"xsd_optional\"",
    "\"xsd_nillable\"",
    "\"xsd_namespace\"",
    "\"xsd_attrs\"",
    "\"include\"",
    "\"void\"",
    "\"bool\"",
    "\"byte\"",
    "\"i16\"",
    "\"i32\"",
    "\"i64\"",
    "\"double\"",
    "\"string\"",
    "\"slist\"",
    "\"senum\"",
    "\"map\"",
    "\"list\"",
    "\"set\"",
    "\"async\"",
    "\"typedef\"",
    "\"struct\"",
    "\"exception\"",
    "\"extends\"",
    "\"throws\"",
    "\"service\"",
    "\"enum\"",
    "\"required\"",
    "\"optional\"",
    "<tok_int_constant>",
    "<tok_double_constant>",
    "<IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
    "<tok_literal>",
    "<tok_st_identifier>",
    "\",\"",
    "\";\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"<\"",
    "\">\"",
  };

}
